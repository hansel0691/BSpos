//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrdersGateway.com.blackstoneonline.services {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", ConfigurationName="com.blackstoneonline.services.BrokerSoap")]
    public interface BrokerSoap {
        
        // CODEGEN: Parameter 'GetSinglePINResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetSinglePIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.GetSinglePINResponse GetSinglePIN(OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetSinglePIN", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetSinglePINResponse> GetSinglePINAsync(OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest request);
        
        // CODEGEN: Parameter 'GetSinglePINSerialResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetSinglePINSerial" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialResponse GetSinglePINSerial(OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetSinglePINSerial" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialResponse> GetSinglePINSerialAsync(OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest request);
        
        // CODEGEN: Parameter 'GetMultiplePINResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMultiplePIN", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.GetMultiplePINResponse GetMultiplePIN(OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMultiplePIN", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetMultiplePINResponse> GetMultiplePINAsync(OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest request);
        
        // CODEGEN: Parameter 'GetMultiplePINLiteResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMultiplePINLite" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteResponse GetMultiplePINLite(OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMultiplePINLite" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteResponse> GetMultiplePINLiteAsync(OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/VoidOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PIN VoidOrder(string MID, string TID, string Password, string Cashier, int OrderID, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/VoidOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> VoidOrderAsync(string MID, string TID, string Password, string Cashier, int OrderID, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUp", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PIN DoTopUp(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUp", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUpWithAdditio" +
            "nalPhones", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PIN DoTopUpWithAdditionalPhones(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, OrdersGateway.com.blackstoneonline.services.AdditionalPhonesData AdditionalPhones);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUpWithAdditio" +
            "nalPhones", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpWithAdditionalPhonesAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, OrdersGateway.com.blackstoneonline.services.AdditionalPhonesData AdditionalPhones);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUpFee", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PIN DoTopUpFee(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUpFee", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpFeeAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUpFeeSerial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PIN DoTopUpFeeSerial(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee, string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTopUpFeeSerial", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpFeeSerialAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee, string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoDailyReconciliat" +
            "ion", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.BillPaymentReconciliationResponse DoDailyReconciliation(string MID, string TID, string Password, string Cashier, System.DateTime batchDate, bool detailedResponse, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoDailyReconciliat" +
            "ion", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillPaymentReconciliationResponse> DoDailyReconciliationAsync(string MID, string TID, string Password, string Cashier, System.DateTime batchDate, bool detailedResponse, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPresentment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.BillPaymentResponse DoBillPresentment(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPresentment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillPaymentResponse> DoBillPresentmentAsync(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.BillPaymentResponse DoBillPayment(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillPaymentResponse> DoBillPaymentAsync(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetBillerCategorie" +
            "s", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.BillerCategoriesResponse GetBillerCategories(string MID, string TID, string Password, string Cashier, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetBillerCategorie" +
            "s", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillerCategoriesResponse> GetBillerCategoriesAsync(string MID, string TID, string Password, string Cashier, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillersBy" +
            "Category", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.MasterBillersByCategoryResponse GetMasterBillersByCategory(string MID, string TID, string Password, string Cashier, string CategoryId, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillersBy" +
            "Category", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MasterBillersByCategoryResponse> GetMasterBillersByCategoryAsync(string MID, string TID, string Password, string Cashier, string CategoryId, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillerPay" +
            "mentOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.MasterBillerPaymentOptionsResponse GetMasterBillerPaymentOptions(string MID, string TID, string Password, string Cashier, string MasterBillerId, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillerPay" +
            "mentOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MasterBillerPaymentOptionsResponse> GetMasterBillerPaymentOptionsAsync(string MID, string TID, string Password, string Cashier, string MasterBillerId, long transactionId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetBillersCategori" +
            "esOld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Category[] GetBillersCategoriesOld(int MerchantId, string TID, string Password, string Cashier);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetBillersCategori" +
            "esOld", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Category[]> GetBillersCategoriesOldAsync(int MerchantId, string TID, string Password, string Cashier);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillersBy" +
            "CategoryOld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.MasterBiller[] GetMasterBillersByCategoryOld(int MerchantId, string TID, string Password, string Cashier, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillersBy" +
            "CategoryOld", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MasterBiller[]> GetMasterBillersByCategoryOldAsync(int MerchantId, string TID, string Password, string Cashier, string CategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillerPay" +
            "mentOptionsOld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PaymentOptionOld[] GetMasterBillerPaymentOptionsOld(int MerchantId, string TID, string Password, string Cashier, string MasterBillerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMasterBillerPay" +
            "mentOptionsOld", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentOptionOld[]> GetMasterBillerPaymentOptionsOldAsync(int MerchantId, string TID, string Password, string Cashier, string MasterBillerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetSunPassBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.BalanceResponse GetSunPassBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetSunPassBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BalanceResponse> GetSunPassBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassReplenish" +
            "ment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse DoSunPassReplenishment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassReplenish" +
            "ment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse> DoSunPassReplenishmentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassReplenish" +
            "mentByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse DoSunPassReplenishmentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassReplenish" +
            "mentByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse> DoSunPassReplenishmentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentI" +
            "nquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse DoSunPassDocumentInquiry(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentI" +
            "nquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse> DoSunPassDocumentInquiryAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentI" +
            "nquiryByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse DoSunPassDocumentInquiryByStore(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentI" +
            "nquiryByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse> DoSunPassDocumentInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentP" +
            "ayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse DoSunPassDocumentPayment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentP" +
            "ayment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse> DoSunPassDocumentPaymentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentP" +
            "aymentByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse DoSunPassDocumentPaymentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string storeId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoSunPassDocumentP" +
            "aymentByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse> DoSunPassDocumentPaymentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string storeId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ProductListResponse GetProductList(string MID, string TID, string Password, string cashier, long TransactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductList", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListResponse> GetProductListAsync(string MID, string TID, string Password, string cashier, long TransactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductListByPr" +
            "oductSbt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ProductListResponse GetProductListByProductSbt(string MID, string TID, string Password, string cashier, long TransactionId, string ProductSbt);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductListByPr" +
            "oductSbt", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListResponse> GetProductListByProductSbtAsync(string MID, string TID, string Password, string cashier, long TransactionId, string ProductSbt);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductListByPr" +
            "oductMainCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ProductListResponse GetProductListByProductMainCode(string MID, string TID, string Password, string cashier, long TransactionId, string ProductMainCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductListByPr" +
            "oductMainCode", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListResponse> GetProductListByProductMainCodeAsync(string MID, string TID, string Password, string cashier, long TransactionId, string ProductMainCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductListVers" +
            "ionNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ProductListVersionResponse GetProductListVersionNumber(string MID, string TID, string Password, string cashier, long TransactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductListVers" +
            "ionNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListVersionResponse> GetProductListVersionNumberAsync(string MID, string TID, string Password, string cashier, long TransactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ProductRatesResponse GetProductRates(string MID, string TID, string Password, string cashier, string ProductMainCode, long TransactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductRates", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductRatesResponse> GetProductRatesAsync(string MID, string TID, string Password, string cashier, string ProductMainCode, long TransactionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductLocalPho" +
            "nesByMerchantId", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ProductLocalPhonesResponse GetProductLocalPhonesByMerchantId(string MID, string TID, string Password, string ProductMaincode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductLocalPho" +
            "nesByMerchantId", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductLocalPhonesResponse> GetProductLocalPhonesByMerchantIdAsync(string MID, string TID, string Password, string ProductMaincode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPaymentOld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPaymentOld(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPaymentOld", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPaymentOldAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPaymentOldSe" +
            "rial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPaymentOldSerial(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPaymentOldSe" +
            "rial", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPaymentOldSerialAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPresentmentO" +
            "ld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPresentmentOld(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPresentmentO" +
            "ld", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPresentmentOldAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPresentmentO" +
            "ldSerial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPresentmentOldSerial(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoBillPresentmentO" +
            "ldSerial", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPresentmentOldSerialAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoDailyReconciliat" +
            "ionOld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ReconciliationResponse DoDailyReconciliationOld(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoDailyReconciliat" +
            "ionOld", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReconciliationResponse> DoDailyReconciliationOldAsync(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoDailyReconciliat" +
            "ionOldSerial", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.ReconciliationResponse DoDailyReconciliationOldSerial(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode, string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoDailyReconciliat" +
            "ionOldSerial", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReconciliationResponse> DoDailyReconciliationOldSerialAsync(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode, string TerminalSerialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetTCATollsBalance" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.TCABalanceResponse GetTCATollsBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string accountZipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetTCATollsBalance" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCABalanceResponse> GetTCATollsBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string accountZipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsReplenis" +
            "hment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse DoTCATollsReplenishment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsReplenis" +
            "hment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse> DoTCATollsReplenishmentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsReplenis" +
            "hmentByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse DoTCATollsReplenishmentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsReplenis" +
            "hmentByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse> DoTCATollsReplenishmentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "Inquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse DoTCATollsDocumentInquiry(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "Inquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse> DoTCATollsDocumentInquiryAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "InquiryByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse DoTCATollsDocumentInquiryByStore(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "InquiryByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse> DoTCATollsDocumentInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "Payment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse DoTCATollsDocumentPayment(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "Payment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse> DoTCATollsDocumentPaymentAsync(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "PaymentByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse DoTCATollsDocumentPaymentByStore(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoTCATollsDocument" +
            "PaymentByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse> DoTCATollsDocumentPaymentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string storeId, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackGetAccoun" +
            "tBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTBalanceResponse FastTrackGetAccountBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackGetAccoun" +
            "tBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTBalanceResponse> FastTrackGetAccountBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "Account", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishAccount(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "Account", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishAccountAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "AccountByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishAccountByStore(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "AccountByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishAccountByStoreAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackGetLicens" +
            "ePlateAccountBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTBalanceResponse FastTrackGetLicensePlateAccountBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackGetLicens" +
            "ePlateAccountBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTBalanceResponse> FastTrackGetLicensePlateAccountBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "LicensePlateAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishLicensePlateAccount(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "LicensePlateAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishLicensePlateAccountAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "LicensePlateAccountByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishLicensePlateAccountByStore(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackReplenish" +
            "LicensePlateAccountByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishLicensePlateAccountByStoreAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentI" +
            "nquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse FastTrackDocumentInquiry(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentI" +
            "nquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse> FastTrackDocumentInquiryAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentP" +
            "ayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse FastTrackDocumentPayment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentP" +
            "ayment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse> FastTrackDocumentPaymentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentI" +
            "nquiryByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse FastTrackDocumentInquiryByStore(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string storeId, string storeZip, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentI" +
            "nquiryByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse> FastTrackDocumentInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string storeId, string storeZip, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentP" +
            "aymentByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse FastTrackDocumentPaymentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string storeId, string storeZip, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackDocumentP" +
            "aymentByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse> FastTrackDocumentPaymentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string storeId, string storeZip, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llInquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse FastTrackOneTimeTollInquiry(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, int tripCount, string travelDate, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llInquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse> FastTrackOneTimeTollInquiryAsync(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, int tripCount, string travelDate, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse FastTrackOneTimeTollPayment(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse> FastTrackOneTimeTollPaymentAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llInquiryByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse FastTrackOneTimeTollInquiryByStore(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, string tripCount, string travelDate, string storeId, string storeZip, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llInquiryByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse> FastTrackOneTimeTollInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, string tripCount, string travelDate, string storeId, string storeZip, string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llPaymentByStore", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse FastTrackOneTimeTollPaymentByStore(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string storeId, 
                    string storeZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/FastTrackOneTimeTo" +
            "llPaymentByStore", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse> FastTrackOneTimeTollPaymentByStoreAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string storeId, 
                    string storeZip, 
                    string transactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMerchantBalance" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.MerchantBalance GetMerchantBalance(string MID, string TID, string Password, string Cashier, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetMerchantBalance" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MerchantBalance> GetMerchantBalanceAsync(string MID, string TID, string Password, string Cashier, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/MetelePinlessVoidL" +
            "astLoad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.CreditResponse MetelePinlessVoidLastLoad(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/MetelePinlessVoidL" +
            "astLoad", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.CreditResponse> MetelePinlessVoidLastLoadAsync(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessVoidLastL" +
            "oad", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.CreditResponse OKPinlessVoidLastLoad(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string OrderId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessVoidLastL" +
            "oad", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.CreditResponse> OKPinlessVoidLastLoadAsync(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string OrderId, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessAddPhoneN" +
            "umber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Response OKPinlessAddPhoneNumber(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessAddPhoneN" +
            "umber", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessAddPhoneNumberAsync(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Response OKPinlessBalance(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessBalanceAsync(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessDeletePho" +
            "neNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Response OKPinlessDeletePhoneNumber(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessDeletePho" +
            "neNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessDeletePhoneNumberAsync(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessEditPhone" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        bool OKPinlessEditPhone(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessEditPhone" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> OKPinlessEditPhoneAsync(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessFindAccou" +
            "nt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Response OKPinlessFindAccount(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessFindAccou" +
            "nt", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessFindAccountAsync(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode);
        
        // CODEGEN: Parameter 'OKPinlessGetCallHistoryResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetCallHi" +
            "story", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryResponse OKPinlessGetCallHistory(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetCallHi" +
            "story", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryResponse> OKPinlessGetCallHistoryAsync(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest request);
        
        // CODEGEN: Parameter 'OKPinlessGetCreditReasonsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetCredit" +
            "Reasons", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsResponse OKPinlessGetCreditReasons(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetCredit" +
            "Reasons", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsResponse> OKPinlessGetCreditReasonsAsync(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetPhoneR" +
            "eport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Report OKPinlessGetPhoneReport(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetPhoneR" +
            "eport", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Report> OKPinlessGetPhoneReportAsync(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, string TransactionMode);
        
        // CODEGEN: Generating message contract since the wrapper name (OKPinlessGetPhoneReportDatailed) of message OKPinlessGetPhoneReportDatailed does not match the default value (OKPinlessGetPhoneReportDetailed)
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetPhoneR" +
            "eportDatailed", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed1 OKPinlessGetPhoneReportDetailed(OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/OKPinlessGetPhoneR" +
            "eportDatailed", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed1> OKPinlessGetPhoneReportDetailedAsync(OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoPinCredit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.PinCreditResponse DoPinCredit(string MID, string TID, string Password, string Cashier, int OriginalOrderID, string ProductMaincode, decimal ProductDenomination, string ControlNumber, string PinNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/DoPinCredit", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PinCreditResponse> DoPinCreditAsync(string MID, string TID, string Password, string Cashier, int OriginalOrderID, string ProductMaincode, decimal ProductDenomination, string ControlNumber, string PinNumber, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductsCatalog" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Catalog GetProductsCatalog(string MID, string TID, string Password, string Cashier, int ProfileID, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductsCatalog" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Catalog> GetProductsCatalogAsync(string MID, string TID, string Password, string Cashier, int ProfileID, string TransactionMode);
        
        // CODEGEN: Parameter 'GetProductProfilesResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductProfiles" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.GetProductProfilesResponse GetProductProfiles(OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetProductProfiles" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetProductProfilesResponse> GetProductProfilesAsync(OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest request);
        
        // CODEGEN: Parameter 'GetAllDestinationsResult' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetAllDestinations" +
            "", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.GetAllDestinationsResponse GetAllDestinations(OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetAllDestinations" +
            "", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetAllDestinationsResponse> GetAllDestinationsAsync(OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetLegalInformatio" +
            "n", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Response1))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FTResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(AccessPhone))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ReconciliationDetail))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(TCAResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Denomination))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Product))]
        OrdersGateway.com.blackstoneonline.services.Legal GetLegalInformation(string MID, string TID, string Password, string Cashier, string TransactionMode);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://services.blackstoneonline.com/TransactionBroker/Broker/GetLegalInformatio" +
            "n", ReplyAction="*")]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Legal> GetLegalInformationAsync(string MID, string TID, string Password, string Cashier, string TransactionMode);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class PIN : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        private string transactionIDField;
        
        private string pinIDField;
        
        private string productMainCodeField;
        
        private string productDenominationField;
        
        private string pinNumberField;
        
        private string controlNumberField;
        
        private string languageField;
        
        private string productSBTField;
        
        private string conn800EnglishField;
        
        private string customerServiceEnglishField;
        
        private object[] localAccessPhonesField;
        
        private string itemFKField;
        
        private string transactionModeField;
        
        private string productDescriptionField;
        
        private string batchField;
        
        private string expirationDateField;
        
        private string productTypeField;
        
        private string barcodeField;
        
        private string instructionsField;
        
        private string printerDisclaimerField;
        
        private string toppedUpNumberField;
        
        private string accountNumberField;
        
        private Legal legalInfoField;
        
        private double foreignAmountField;
        
        private double foreignMoneyLeftField;
        
        private string referenceNumberField;
        
        private string authorizationCodeField;
        
        private string currencyCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TransactionID {
            get {
                return this.transactionIDField;
            }
            set {
                this.transactionIDField = value;
                this.RaisePropertyChanged("TransactionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string PinID {
            get {
                return this.pinIDField;
            }
            set {
                this.pinIDField = value;
                this.RaisePropertyChanged("PinID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ProductMainCode {
            get {
                return this.productMainCodeField;
            }
            set {
                this.productMainCodeField = value;
                this.RaisePropertyChanged("ProductMainCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ProductDenomination {
            get {
                return this.productDenominationField;
            }
            set {
                this.productDenominationField = value;
                this.RaisePropertyChanged("ProductDenomination");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string PinNumber {
            get {
                return this.pinNumberField;
            }
            set {
                this.pinNumberField = value;
                this.RaisePropertyChanged("PinNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ControlNumber {
            get {
                return this.controlNumberField;
            }
            set {
                this.controlNumberField = value;
                this.RaisePropertyChanged("ControlNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
                this.RaisePropertyChanged("Language");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string ProductSBT {
            get {
                return this.productSBTField;
            }
            set {
                this.productSBTField = value;
                this.RaisePropertyChanged("ProductSBT");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Conn800English {
            get {
                return this.conn800EnglishField;
            }
            set {
                this.conn800EnglishField = value;
                this.RaisePropertyChanged("Conn800English");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string CustomerServiceEnglish {
            get {
                return this.customerServiceEnglishField;
            }
            set {
                this.customerServiceEnglishField = value;
                this.RaisePropertyChanged("CustomerServiceEnglish");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=12)]
        public object[] LocalAccessPhones {
            get {
                return this.localAccessPhonesField;
            }
            set {
                this.localAccessPhonesField = value;
                this.RaisePropertyChanged("LocalAccessPhones");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string ItemFK {
            get {
                return this.itemFKField;
            }
            set {
                this.itemFKField = value;
                this.RaisePropertyChanged("ItemFK");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string TransactionMode {
            get {
                return this.transactionModeField;
            }
            set {
                this.transactionModeField = value;
                this.RaisePropertyChanged("TransactionMode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string ProductDescription {
            get {
                return this.productDescriptionField;
            }
            set {
                this.productDescriptionField = value;
                this.RaisePropertyChanged("ProductDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Batch {
            get {
                return this.batchField;
            }
            set {
                this.batchField = value;
                this.RaisePropertyChanged("Batch");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
                this.RaisePropertyChanged("ExpirationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
                this.RaisePropertyChanged("ProductType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string Barcode {
            get {
                return this.barcodeField;
            }
            set {
                this.barcodeField = value;
                this.RaisePropertyChanged("Barcode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string Instructions {
            get {
                return this.instructionsField;
            }
            set {
                this.instructionsField = value;
                this.RaisePropertyChanged("Instructions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string PrinterDisclaimer {
            get {
                return this.printerDisclaimerField;
            }
            set {
                this.printerDisclaimerField = value;
                this.RaisePropertyChanged("PrinterDisclaimer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string ToppedUpNumber {
            get {
                return this.toppedUpNumberField;
            }
            set {
                this.toppedUpNumberField = value;
                this.RaisePropertyChanged("ToppedUpNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("AccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public Legal LegalInfo {
            get {
                return this.legalInfoField;
            }
            set {
                this.legalInfoField = value;
                this.RaisePropertyChanged("LegalInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public double ForeignAmount {
            get {
                return this.foreignAmountField;
            }
            set {
                this.foreignAmountField = value;
                this.RaisePropertyChanged("ForeignAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public double ForeignMoneyLeft {
            get {
                return this.foreignMoneyLeftField;
            }
            set {
                this.foreignMoneyLeftField = value;
                this.RaisePropertyChanged("ForeignMoneyLeft");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string AuthorizationCode {
            get {
                return this.authorizationCodeField;
            }
            set {
                this.authorizationCodeField = value;
                this.RaisePropertyChanged("AuthorizationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
                this.RaisePropertyChanged("CurrencyCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentInquiryResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentPaymentResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ReplenishmentResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BalanceResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="Response", Namespace="http://tempuri.org/")]
    public partial class Response1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timestampField;
        
        private int responseCodeField;
        
        private string responseDescriptionField;
        
        private long referenceNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ResponseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
                this.RaisePropertyChanged("ResponseDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DocumentInquiryResponse : Response1 {
        
        private string purchaseIdField;
        
        private Document requestedDocumentField;
        
        private Document[] unpaidDocumentListField;
        
        private double unpaidDocumentListAmountField;
        
        private string responseMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Document RequestedDocument {
            get {
                return this.requestedDocumentField;
            }
            set {
                this.requestedDocumentField = value;
                this.RaisePropertyChanged("RequestedDocument");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public Document[] UnpaidDocumentList {
            get {
                return this.unpaidDocumentListField;
            }
            set {
                this.unpaidDocumentListField = value;
                this.RaisePropertyChanged("UnpaidDocumentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double UnpaidDocumentListAmount {
            get {
                return this.unpaidDocumentListAmountField;
            }
            set {
                this.unpaidDocumentListAmountField = value;
                this.RaisePropertyChanged("UnpaidDocumentListAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ResponseMessage {
            get {
                return this.responseMessageField;
            }
            set {
                this.responseMessageField = value;
                this.RaisePropertyChanged("ResponseMessage");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Document : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string documentIdField;
        
        private double documentPaymentAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double DocumentPaymentAmount {
            get {
                return this.documentPaymentAmountField;
            }
            set {
                this.documentPaymentAmountField = value;
                this.RaisePropertyChanged("DocumentPaymentAmount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class DocumentPaymentResponse : Response1 {
        
        private Document[] paidDocumentListField;
        
        private double updatedBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Document[] PaidDocumentList {
            get {
                return this.paidDocumentListField;
            }
            set {
                this.paidDocumentListField = value;
                this.RaisePropertyChanged("PaidDocumentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double UpdatedBalance {
            get {
                return this.updatedBalanceField;
            }
            set {
                this.updatedBalanceField = value;
                this.RaisePropertyChanged("UpdatedBalance");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReplenishmentResponse : Response1 {
        
        private string updatedBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UpdatedBalance {
            get {
                return this.updatedBalanceField;
            }
            set {
                this.updatedBalanceField = value;
                this.RaisePropertyChanged("UpdatedBalance");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class BalanceResponse : Response1 {
        
        private string purchaseIdField;
        
        private double currentBalanceField;
        
        private double minimumReplenishmentAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                this.currentBalanceField = value;
                this.RaisePropertyChanged("CurrentBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double MinimumReplenishmentAmount {
            get {
                return this.minimumReplenishmentAmountField;
            }
            set {
                this.minimumReplenishmentAmountField = value;
                this.RaisePropertyChanged("MinimumReplenishmentAmount");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTOneTimeTollInquiryResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTOneTimeTollPaymentResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTReplenishmentResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTDocumentPaymentResponse1))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTDocumentInquiryResponse1))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FTBalanceResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timestampField;
        
        private int responseCodeField;
        
        private string responseDescriptionField;
        
        private long referenceNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ResponseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
                this.RaisePropertyChanged("ResponseDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTOneTimeTollInquiryResponse : FTResponse {
        
        private string purchaseIdField;
        
        private double amountToBeChargedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double AmountToBeCharged {
            get {
                return this.amountToBeChargedField;
            }
            set {
                this.amountToBeChargedField = value;
                this.RaisePropertyChanged("AmountToBeCharged");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTOneTimeTollPaymentResponse : FTResponse {
        
        private string purchaseIdField;
        
        private string processedDateTimeField;
        
        private string requestDateTimeField;
        
        private string receivedAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ProcessedDateTime {
            get {
                return this.processedDateTimeField;
            }
            set {
                this.processedDateTimeField = value;
                this.RaisePropertyChanged("ProcessedDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string RequestDateTime {
            get {
                return this.requestDateTimeField;
            }
            set {
                this.requestDateTimeField = value;
                this.RaisePropertyChanged("RequestDateTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ReceivedAmount {
            get {
                return this.receivedAmountField;
            }
            set {
                this.receivedAmountField = value;
                this.RaisePropertyChanged("ReceivedAmount");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTReplenishmentResponse : FTResponse {
        
        private string updatedBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UpdatedBalance {
            get {
                return this.updatedBalanceField;
            }
            set {
                this.updatedBalanceField = value;
                this.RaisePropertyChanged("UpdatedBalance");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="FTDocumentPaymentResponse", Namespace="http://tempuri.org/")]
    public partial class FTDocumentPaymentResponse1 : FTResponse {
        
        private FTDocument[] paidDocumentListField;
        
        private double updatedBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public FTDocument[] PaidDocumentList {
            get {
                return this.paidDocumentListField;
            }
            set {
                this.paidDocumentListField = value;
                this.RaisePropertyChanged("PaidDocumentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double UpdatedBalance {
            get {
                return this.updatedBalanceField;
            }
            set {
                this.updatedBalanceField = value;
                this.RaisePropertyChanged("UpdatedBalance");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTDocument : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string documentIdField;
        
        private double documentPaymentAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double DocumentPaymentAmount {
            get {
                return this.documentPaymentAmountField;
            }
            set {
                this.documentPaymentAmountField = value;
                this.RaisePropertyChanged("DocumentPaymentAmount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(TypeName="FTDocumentInquiryResponse", Namespace="http://tempuri.org/")]
    public partial class FTDocumentInquiryResponse1 : FTResponse {
        
        private string purchaseIdField;
        
        private FTDocument requestedDocumentField;
        
        private FTDocument[] unpaidDocumentListField;
        
        private double unpaidDocumentListAmountField;
        
        private string responseMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FTDocument RequestedDocument {
            get {
                return this.requestedDocumentField;
            }
            set {
                this.requestedDocumentField = value;
                this.RaisePropertyChanged("RequestedDocument");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public FTDocument[] UnpaidDocumentList {
            get {
                return this.unpaidDocumentListField;
            }
            set {
                this.unpaidDocumentListField = value;
                this.RaisePropertyChanged("UnpaidDocumentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double UnpaidDocumentListAmount {
            get {
                return this.unpaidDocumentListAmountField;
            }
            set {
                this.unpaidDocumentListAmountField = value;
                this.RaisePropertyChanged("UnpaidDocumentListAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ResponseMessage {
            get {
                return this.responseMessageField;
            }
            set {
                this.responseMessageField = value;
                this.RaisePropertyChanged("ResponseMessage");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FTBalanceResponse : FTResponse {
        
        private string purchaseIdField;
        
        private double currentBalanceField;
        
        private double minimumReplenishmentAmountField;
        
        private string firstNameField;
        
        private string middleNameField;
        
        private string lastNameField;
        
        private string addressLine1Field;
        
        private string addressLine2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string countryField;
        
        private string zipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                this.currentBalanceField = value;
                this.RaisePropertyChanged("CurrentBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double MinimumReplenishmentAmount {
            get {
                return this.minimumReplenishmentAmountField;
            }
            set {
                this.minimumReplenishmentAmountField = value;
                this.RaisePropertyChanged("MinimumReplenishmentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
                this.RaisePropertyChanged("FirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MiddleName {
            get {
                return this.middleNameField;
            }
            set {
                this.middleNameField = value;
                this.RaisePropertyChanged("MiddleName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
                this.RaisePropertyChanged("LastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AddressLine1 {
            get {
                return this.addressLine1Field;
            }
            set {
                this.addressLine1Field = value;
                this.RaisePropertyChanged("AddressLine1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AddressLine2 {
            get {
                return this.addressLine2Field;
            }
            set {
                this.addressLine2Field = value;
                this.RaisePropertyChanged("AddressLine2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("Country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
                this.RaisePropertyChanged("Zip");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class PinCreditResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        private string creditStatusField;
        
        private string creditStatusDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CreditStatus {
            get {
                return this.creditStatusField;
            }
            set {
                this.creditStatusField = value;
                this.RaisePropertyChanged("CreditStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CreditStatusDescription {
            get {
                return this.creditStatusDescriptionField;
            }
            set {
                this.creditStatusDescriptionField = value;
                this.RaisePropertyChanged("CreditStatusDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class CreditResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int responseCodeField;
        
        private string responseDescriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResponseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
                this.RaisePropertyChanged("ResponseDescription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class MerchantBalance : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        private string balanceField;
        
        private string runningAchBalanceField;
        
        private string nextAchDateField;
        
        private string additionalInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
                this.RaisePropertyChanged("Balance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string RunningAchBalance {
            get {
                return this.runningAchBalanceField;
            }
            set {
                this.runningAchBalanceField = value;
                this.RaisePropertyChanged("RunningAchBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string NextAchDate {
            get {
                return this.nextAchDateField;
            }
            set {
                this.nextAchDateField = value;
                this.RaisePropertyChanged("NextAchDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AdditionalInfo {
            get {
                return this.additionalInfoField;
            }
            set {
                this.additionalInfoField = value;
                this.RaisePropertyChanged("AdditionalInfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class FTDocumentPaymentResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timestampField;
        
        private int responseCodeField;
        
        private string responseDescriptionField;
        
        private long referenceNumberField;
        
        private string updatedBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ResponseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
                this.RaisePropertyChanged("ResponseDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string UpdatedBalance {
            get {
                return this.updatedBalanceField;
            }
            set {
                this.updatedBalanceField = value;
                this.RaisePropertyChanged("UpdatedBalance");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class FTDocumentInquiryResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timestampField;
        
        private int responseCodeField;
        
        private string responseDescriptionField;
        
        private long referenceNumberField;
        
        private string purchaseIdField;
        
        private double unpaidAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ResponseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
                this.RaisePropertyChanged("ResponseDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double UnpaidAmount {
            get {
                return this.unpaidAmountField;
            }
            set {
                this.unpaidAmountField = value;
                this.RaisePropertyChanged("UnpaidAmount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class PaymentResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private string vendorIdField;
        
        private string paymentAmountField;
        
        private string feeAmountField;
        
        private string accountNumberField;
        
        private string altAccountNumberField;
        
        private string additAccountNumber1Field;
        
        private string additAccountNumber2Field;
        
        private string customerFirstNameField;
        
        private string customerLastNameField;
        
        private string trackingNumberField;
        
        private string batchNumberField;
        
        private string billerLoadUpdateFlagField;
        
        private string authorizationCodeField;
        
        private string returnMessageField;
        
        private string presentmentMessageField;
        
        private string postingDateMessageField;
        
        private string receiptMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long resultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("resultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string resultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("resultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
                this.RaisePropertyChanged("VendorId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string PaymentAmount {
            get {
                return this.paymentAmountField;
            }
            set {
                this.paymentAmountField = value;
                this.RaisePropertyChanged("PaymentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FeeAmount {
            get {
                return this.feeAmountField;
            }
            set {
                this.feeAmountField = value;
                this.RaisePropertyChanged("FeeAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("AccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AltAccountNumber {
            get {
                return this.altAccountNumberField;
            }
            set {
                this.altAccountNumberField = value;
                this.RaisePropertyChanged("AltAccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AdditAccountNumber1 {
            get {
                return this.additAccountNumber1Field;
            }
            set {
                this.additAccountNumber1Field = value;
                this.RaisePropertyChanged("AdditAccountNumber1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string AdditAccountNumber2 {
            get {
                return this.additAccountNumber2Field;
            }
            set {
                this.additAccountNumber2Field = value;
                this.RaisePropertyChanged("AdditAccountNumber2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CustomerFirstName {
            get {
                return this.customerFirstNameField;
            }
            set {
                this.customerFirstNameField = value;
                this.RaisePropertyChanged("CustomerFirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CustomerLastName {
            get {
                return this.customerLastNameField;
            }
            set {
                this.customerLastNameField = value;
                this.RaisePropertyChanged("CustomerLastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string TrackingNumber {
            get {
                return this.trackingNumberField;
            }
            set {
                this.trackingNumberField = value;
                this.RaisePropertyChanged("TrackingNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string BatchNumber {
            get {
                return this.batchNumberField;
            }
            set {
                this.batchNumberField = value;
                this.RaisePropertyChanged("BatchNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string BillerLoadUpdateFlag {
            get {
                return this.billerLoadUpdateFlagField;
            }
            set {
                this.billerLoadUpdateFlagField = value;
                this.RaisePropertyChanged("BillerLoadUpdateFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string AuthorizationCode {
            get {
                return this.authorizationCodeField;
            }
            set {
                this.authorizationCodeField = value;
                this.RaisePropertyChanged("AuthorizationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string ReturnMessage {
            get {
                return this.returnMessageField;
            }
            set {
                this.returnMessageField = value;
                this.RaisePropertyChanged("ReturnMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string PresentmentMessage {
            get {
                return this.presentmentMessageField;
            }
            set {
                this.presentmentMessageField = value;
                this.RaisePropertyChanged("PresentmentMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string PostingDateMessage {
            get {
                return this.postingDateMessageField;
            }
            set {
                this.postingDateMessageField = value;
                this.RaisePropertyChanged("PostingDateMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string ReceiptMessage {
            get {
                return this.receiptMessageField;
            }
            set {
                this.receiptMessageField = value;
                this.RaisePropertyChanged("ReceiptMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductLocalPhonesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private ProductAccessPhone[] accessPhonesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ProductAccessPhone[] AccessPhones {
            get {
                return this.accessPhonesField;
            }
            set {
                this.accessPhonesField = value;
                this.RaisePropertyChanged("AccessPhones");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductAccessPhone : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string stateField;
        
        private string cityField;
        
        private string languageField;
        
        private string phoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
                this.RaisePropertyChanged("Language");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductRate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string countryField;
        
        private double localRateField;
        
        private double tollFreeRateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("Country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double LocalRate {
            get {
                return this.localRateField;
            }
            set {
                this.localRateField = value;
                this.RaisePropertyChanged("LocalRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double TollFreeRate {
            get {
                return this.tollFreeRateField;
            }
            set {
                this.tollFreeRateField = value;
                this.RaisePropertyChanged("TollFreeRate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductRatesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private ProductRate[] ratesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public ProductRate[] Rates {
            get {
                return this.ratesField;
            }
            set {
                this.ratesField = value;
                this.RaisePropertyChanged("Rates");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductListVersionResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private string productListVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ProductListVersion {
            get {
                return this.productListVersionField;
            }
            set {
                this.productListVersionField = value;
                this.RaisePropertyChanged("ProductListVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductFlags : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool showRatesField;
        
        private bool showTermsAndConditionsField;
        
        private bool showInstructionsField;
        
        private bool showAccessPhonesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool ShowRates {
            get {
                return this.showRatesField;
            }
            set {
                this.showRatesField = value;
                this.RaisePropertyChanged("ShowRates");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool ShowTermsAndConditions {
            get {
                return this.showTermsAndConditionsField;
            }
            set {
                this.showTermsAndConditionsField = value;
                this.RaisePropertyChanged("ShowTermsAndConditions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool ShowInstructions {
            get {
                return this.showInstructionsField;
            }
            set {
                this.showInstructionsField = value;
                this.RaisePropertyChanged("ShowInstructions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool ShowAccessPhones {
            get {
                return this.showAccessPhonesField;
            }
            set {
                this.showAccessPhonesField = value;
                this.RaisePropertyChanged("ShowAccessPhones");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductDenominationConfig : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double denominationField;
        
        private int additionalPhonesQuantityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Denomination {
            get {
                return this.denominationField;
            }
            set {
                this.denominationField = value;
                this.RaisePropertyChanged("Denomination");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int AdditionalPhonesQuantity {
            get {
                return this.additionalPhonesQuantityField;
            }
            set {
                this.additionalPhonesQuantityField = value;
                this.RaisePropertyChanged("AdditionalPhonesQuantity");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductListItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string nameField;
        
        private bool useFixedDenominationsField;
        
        private double minDenominationField;
        
        private double maxDenominationField;
        
        private double feeAmountField;
        
        private string carrierNameField;
        
        private string countryCodeField;
        
        private string countryNameField;
        
        private string typeField;
        
        private string imageUrlField;
        
        private string dialCountryCodeField;
        
        private string termsAndConditionsField;
        
        private string instructionsField;
        
        private double[] denominationsField;
        
        private ProductDenominationConfig[] denominationsConfigField;
        
        private ProductAccessPhone[] accessPhonesField;
        
        private ProductFlags flagsField;
        
        private int merchantBuyingFrequencyField;
        
        private int zipCodeBuyingFrequencyField;
        
        private bool acceptAdditionalPhonesField;
        
        private int additionalPhonesQuantityField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool UseFixedDenominations {
            get {
                return this.useFixedDenominationsField;
            }
            set {
                this.useFixedDenominationsField = value;
                this.RaisePropertyChanged("UseFixedDenominations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double MinDenomination {
            get {
                return this.minDenominationField;
            }
            set {
                this.minDenominationField = value;
                this.RaisePropertyChanged("MinDenomination");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double MaxDenomination {
            get {
                return this.maxDenominationField;
            }
            set {
                this.maxDenominationField = value;
                this.RaisePropertyChanged("MaxDenomination");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double FeeAmount {
            get {
                return this.feeAmountField;
            }
            set {
                this.feeAmountField = value;
                this.RaisePropertyChanged("FeeAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CarrierName {
            get {
                return this.carrierNameField;
            }
            set {
                this.carrierNameField = value;
                this.RaisePropertyChanged("CarrierName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
                this.RaisePropertyChanged("CountryName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
                this.RaisePropertyChanged("ImageUrl");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string DialCountryCode {
            get {
                return this.dialCountryCodeField;
            }
            set {
                this.dialCountryCodeField = value;
                this.RaisePropertyChanged("DialCountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string TermsAndConditions {
            get {
                return this.termsAndConditionsField;
            }
            set {
                this.termsAndConditionsField = value;
                this.RaisePropertyChanged("TermsAndConditions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Instructions {
            get {
                return this.instructionsField;
            }
            set {
                this.instructionsField = value;
                this.RaisePropertyChanged("Instructions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=14)]
        public double[] Denominations {
            get {
                return this.denominationsField;
            }
            set {
                this.denominationsField = value;
                this.RaisePropertyChanged("Denominations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=15)]
        public ProductDenominationConfig[] DenominationsConfig {
            get {
                return this.denominationsConfigField;
            }
            set {
                this.denominationsConfigField = value;
                this.RaisePropertyChanged("DenominationsConfig");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=16)]
        public ProductAccessPhone[] AccessPhones {
            get {
                return this.accessPhonesField;
            }
            set {
                this.accessPhonesField = value;
                this.RaisePropertyChanged("AccessPhones");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public ProductFlags Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
                this.RaisePropertyChanged("Flags");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public int MerchantBuyingFrequency {
            get {
                return this.merchantBuyingFrequencyField;
            }
            set {
                this.merchantBuyingFrequencyField = value;
                this.RaisePropertyChanged("MerchantBuyingFrequency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public int ZipCodeBuyingFrequency {
            get {
                return this.zipCodeBuyingFrequencyField;
            }
            set {
                this.zipCodeBuyingFrequencyField = value;
                this.RaisePropertyChanged("ZipCodeBuyingFrequency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public bool AcceptAdditionalPhones {
            get {
                return this.acceptAdditionalPhonesField;
            }
            set {
                this.acceptAdditionalPhonesField = value;
                this.RaisePropertyChanged("AcceptAdditionalPhones");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public int AdditionalPhonesQuantity {
            get {
                return this.additionalPhonesQuantityField;
            }
            set {
                this.additionalPhonesQuantityField = value;
                this.RaisePropertyChanged("AdditionalPhonesQuantity");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ProductListResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private string productListVersionField;
        
        private ProductListItem[] productsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ProductListVersion {
            get {
                return this.productListVersionField;
            }
            set {
                this.productListVersionField = value;
                this.RaisePropertyChanged("ProductListVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public ProductListItem[] Products {
            get {
                return this.productsField;
            }
            set {
                this.productsField = value;
                this.RaisePropertyChanged("Products");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class PaymentOption : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string paymentTypeField;
        
        private double feeAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
                this.RaisePropertyChanged("PaymentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double FeeAmount {
            get {
                return this.feeAmountField;
            }
            set {
                this.feeAmountField = value;
                this.RaisePropertyChanged("FeeAmount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class MasterBillerPaymentOptionsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private BillerLoadRecord billerDataField;
        
        private PaymentOption[] paymentOptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public BillerLoadRecord BillerData {
            get {
                return this.billerDataField;
            }
            set {
                this.billerDataField = value;
                this.RaisePropertyChanged("BillerData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public PaymentOption[] PaymentOptions {
            get {
                return this.paymentOptionsField;
            }
            set {
                this.paymentOptionsField = value;
                this.RaisePropertyChanged("PaymentOptions");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PaymentOptionOld))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class BillerLoadRecord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string vendorIDField;
        
        private string vendorNameField;
        
        private string vendorAccountLengthMinField;
        
        private string vendorAccountLengthMaxField;
        
        private string vendorTranAmtMinField;
        
        private string vendorTranAmtMaxField;
        
        private string custNameRequiredField;
        
        private string senderNameRequiredField;
        
        private string senderRequiredAmtMinField;
        
        private string maskAcctOnReceiptField;
        
        private string postingTimeDescField;
        
        private string postingTimeCutoffField;
        
        private string vendorRemitTimingField;
        
        private string presentmentFlagField;
        
        private string formFlagField;
        
        private BillerLoadFormDetails formDetailsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string VendorID {
            get {
                return this.vendorIDField;
            }
            set {
                this.vendorIDField = value;
                this.RaisePropertyChanged("VendorID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string VendorName {
            get {
                return this.vendorNameField;
            }
            set {
                this.vendorNameField = value;
                this.RaisePropertyChanged("VendorName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string VendorAccountLengthMin {
            get {
                return this.vendorAccountLengthMinField;
            }
            set {
                this.vendorAccountLengthMinField = value;
                this.RaisePropertyChanged("VendorAccountLengthMin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string VendorAccountLengthMax {
            get {
                return this.vendorAccountLengthMaxField;
            }
            set {
                this.vendorAccountLengthMaxField = value;
                this.RaisePropertyChanged("VendorAccountLengthMax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string VendorTranAmtMin {
            get {
                return this.vendorTranAmtMinField;
            }
            set {
                this.vendorTranAmtMinField = value;
                this.RaisePropertyChanged("VendorTranAmtMin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string VendorTranAmtMax {
            get {
                return this.vendorTranAmtMaxField;
            }
            set {
                this.vendorTranAmtMaxField = value;
                this.RaisePropertyChanged("VendorTranAmtMax");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CustNameRequired {
            get {
                return this.custNameRequiredField;
            }
            set {
                this.custNameRequiredField = value;
                this.RaisePropertyChanged("CustNameRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string SenderNameRequired {
            get {
                return this.senderNameRequiredField;
            }
            set {
                this.senderNameRequiredField = value;
                this.RaisePropertyChanged("SenderNameRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string SenderRequiredAmtMin {
            get {
                return this.senderRequiredAmtMinField;
            }
            set {
                this.senderRequiredAmtMinField = value;
                this.RaisePropertyChanged("SenderRequiredAmtMin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string MaskAcctOnReceipt {
            get {
                return this.maskAcctOnReceiptField;
            }
            set {
                this.maskAcctOnReceiptField = value;
                this.RaisePropertyChanged("MaskAcctOnReceipt");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string PostingTimeDesc {
            get {
                return this.postingTimeDescField;
            }
            set {
                this.postingTimeDescField = value;
                this.RaisePropertyChanged("PostingTimeDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string PostingTimeCutoff {
            get {
                return this.postingTimeCutoffField;
            }
            set {
                this.postingTimeCutoffField = value;
                this.RaisePropertyChanged("PostingTimeCutoff");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string VendorRemitTiming {
            get {
                return this.vendorRemitTimingField;
            }
            set {
                this.vendorRemitTimingField = value;
                this.RaisePropertyChanged("VendorRemitTiming");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string PresentmentFlag {
            get {
                return this.presentmentFlagField;
            }
            set {
                this.presentmentFlagField = value;
                this.RaisePropertyChanged("PresentmentFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string FormFlag {
            get {
                return this.formFlagField;
            }
            set {
                this.formFlagField = value;
                this.RaisePropertyChanged("FormFlag");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public BillerLoadFormDetails FormDetails {
            get {
                return this.formDetailsField;
            }
            set {
                this.formDetailsField = value;
                this.RaisePropertyChanged("FormDetails");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class BillerLoadFormDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string altLookupLabelField;
        
        private string altLookupVisibleLenField;
        
        private string altLookupMaxLenField;
        
        private string addInfoLabel1Field;
        
        private string addInfoReqFlag1Field;
        
        private string addInfoVisibleLen1Field;
        
        private string addInfoMaxLen1Field;
        
        private string addInfoLabel2Field;
        
        private string addInfoReqFlag2Field;
        
        private string addInfoVisibleLen2Field;
        
        private string addInfoMaxLen2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AltLookupLabel {
            get {
                return this.altLookupLabelField;
            }
            set {
                this.altLookupLabelField = value;
                this.RaisePropertyChanged("AltLookupLabel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string AltLookupVisibleLen {
            get {
                return this.altLookupVisibleLenField;
            }
            set {
                this.altLookupVisibleLenField = value;
                this.RaisePropertyChanged("AltLookupVisibleLen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string AltLookupMaxLen {
            get {
                return this.altLookupMaxLenField;
            }
            set {
                this.altLookupMaxLenField = value;
                this.RaisePropertyChanged("AltLookupMaxLen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string AddInfoLabel1 {
            get {
                return this.addInfoLabel1Field;
            }
            set {
                this.addInfoLabel1Field = value;
                this.RaisePropertyChanged("AddInfoLabel1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AddInfoReqFlag1 {
            get {
                return this.addInfoReqFlag1Field;
            }
            set {
                this.addInfoReqFlag1Field = value;
                this.RaisePropertyChanged("AddInfoReqFlag1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AddInfoVisibleLen1 {
            get {
                return this.addInfoVisibleLen1Field;
            }
            set {
                this.addInfoVisibleLen1Field = value;
                this.RaisePropertyChanged("AddInfoVisibleLen1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AddInfoMaxLen1 {
            get {
                return this.addInfoMaxLen1Field;
            }
            set {
                this.addInfoMaxLen1Field = value;
                this.RaisePropertyChanged("AddInfoMaxLen1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AddInfoLabel2 {
            get {
                return this.addInfoLabel2Field;
            }
            set {
                this.addInfoLabel2Field = value;
                this.RaisePropertyChanged("AddInfoLabel2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string AddInfoReqFlag2 {
            get {
                return this.addInfoReqFlag2Field;
            }
            set {
                this.addInfoReqFlag2Field = value;
                this.RaisePropertyChanged("AddInfoReqFlag2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string AddInfoVisibleLen2 {
            get {
                return this.addInfoVisibleLen2Field;
            }
            set {
                this.addInfoVisibleLen2Field = value;
                this.RaisePropertyChanged("AddInfoVisibleLen2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string AddInfoMaxLen2 {
            get {
                return this.addInfoMaxLen2Field;
            }
            set {
                this.addInfoMaxLen2Field = value;
                this.RaisePropertyChanged("AddInfoMaxLen2");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class PaymentOptionOld : BillerLoadRecord {
        
        private string paymentTypeField;
        
        private double feeAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
                this.RaisePropertyChanged("PaymentType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double FeeAmount {
            get {
                return this.feeAmountField;
            }
            set {
                this.feeAmountField = value;
                this.RaisePropertyChanged("FeeAmount");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class MasterBiller : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class MasterBillersByCategoryResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private MasterBiller[] masterBillersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public MasterBiller[] MasterBillers {
            get {
                return this.masterBillersField;
            }
            set {
                this.masterBillersField = value;
                this.RaisePropertyChanged("MasterBillers");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Category : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string idField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class BillerCategoriesResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private Category[] categoriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public Category[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
                this.RaisePropertyChanged("Categories");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class BillPaymentResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private string vendorIdField;
        
        private string paymentAmountField;
        
        private string feeAmountField;
        
        private string accountNumberField;
        
        private string altAccountNumberField;
        
        private string additAccountNumber1Field;
        
        private string additAccountNumber2Field;
        
        private string customerFirstNameField;
        
        private string customerLastNameField;
        
        private string trackingNumberField;
        
        private string batchNumberField;
        
        private string authorizationCodeField;
        
        private string returnMessageField;
        
        private string presentmentMessageField;
        
        private string postingDateMessageField;
        
        private string receiptMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long resultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("resultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string resultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("resultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string VendorId {
            get {
                return this.vendorIdField;
            }
            set {
                this.vendorIdField = value;
                this.RaisePropertyChanged("VendorId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string PaymentAmount {
            get {
                return this.paymentAmountField;
            }
            set {
                this.paymentAmountField = value;
                this.RaisePropertyChanged("PaymentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FeeAmount {
            get {
                return this.feeAmountField;
            }
            set {
                this.feeAmountField = value;
                this.RaisePropertyChanged("FeeAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
                this.RaisePropertyChanged("AccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string AltAccountNumber {
            get {
                return this.altAccountNumberField;
            }
            set {
                this.altAccountNumberField = value;
                this.RaisePropertyChanged("AltAccountNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string AdditAccountNumber1 {
            get {
                return this.additAccountNumber1Field;
            }
            set {
                this.additAccountNumber1Field = value;
                this.RaisePropertyChanged("AdditAccountNumber1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string AdditAccountNumber2 {
            get {
                return this.additAccountNumber2Field;
            }
            set {
                this.additAccountNumber2Field = value;
                this.RaisePropertyChanged("AdditAccountNumber2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CustomerFirstName {
            get {
                return this.customerFirstNameField;
            }
            set {
                this.customerFirstNameField = value;
                this.RaisePropertyChanged("CustomerFirstName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CustomerLastName {
            get {
                return this.customerLastNameField;
            }
            set {
                this.customerLastNameField = value;
                this.RaisePropertyChanged("CustomerLastName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string TrackingNumber {
            get {
                return this.trackingNumberField;
            }
            set {
                this.trackingNumberField = value;
                this.RaisePropertyChanged("TrackingNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string BatchNumber {
            get {
                return this.batchNumberField;
            }
            set {
                this.batchNumberField = value;
                this.RaisePropertyChanged("BatchNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string AuthorizationCode {
            get {
                return this.authorizationCodeField;
            }
            set {
                this.authorizationCodeField = value;
                this.RaisePropertyChanged("AuthorizationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ReturnMessage {
            get {
                return this.returnMessageField;
            }
            set {
                this.returnMessageField = value;
                this.RaisePropertyChanged("ReturnMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string PresentmentMessage {
            get {
                return this.presentmentMessageField;
            }
            set {
                this.presentmentMessageField = value;
                this.RaisePropertyChanged("PresentmentMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string PostingDateMessage {
            get {
                return this.postingDateMessageField;
            }
            set {
                this.postingDateMessageField = value;
                this.RaisePropertyChanged("PostingDateMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string ReceiptMessage {
            get {
                return this.receiptMessageField;
            }
            set {
                this.receiptMessageField = value;
                this.RaisePropertyChanged("ReceiptMessage");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class BillPaymentReconciliationDetailItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string trackingNumberField;
        
        private string referenceNumberField;
        
        private double paymentAmountField;
        
        private double feeShareField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TrackingNumber {
            get {
                return this.trackingNumberField;
            }
            set {
                this.trackingNumberField = value;
                this.RaisePropertyChanged("TrackingNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double PaymentAmount {
            get {
                return this.paymentAmountField;
            }
            set {
                this.paymentAmountField = value;
                this.RaisePropertyChanged("PaymentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double FeeShare {
            get {
                return this.feeShareField;
            }
            set {
                this.feeShareField = value;
                this.RaisePropertyChanged("FeeShare");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class BillPaymentReconciliationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private string batchDateField;
        
        private string batchNumberField;
        
        private int totalRecordsField;
        
        private double totalPaymentAmountField;
        
        private double totalFeeAmountField;
        
        private string terminalNumberField;
        
        private BillPaymentReconciliationDetailItem[] reconciliationDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long ResultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("ResultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ResultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("ResultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string BatchDate {
            get {
                return this.batchDateField;
            }
            set {
                this.batchDateField = value;
                this.RaisePropertyChanged("BatchDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BatchNumber {
            get {
                return this.batchNumberField;
            }
            set {
                this.batchNumberField = value;
                this.RaisePropertyChanged("BatchNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double TotalPaymentAmount {
            get {
                return this.totalPaymentAmountField;
            }
            set {
                this.totalPaymentAmountField = value;
                this.RaisePropertyChanged("TotalPaymentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double TotalFeeAmount {
            get {
                return this.totalFeeAmountField;
            }
            set {
                this.totalFeeAmountField = value;
                this.RaisePropertyChanged("TotalFeeAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string TerminalNumber {
            get {
                return this.terminalNumberField;
            }
            set {
                this.terminalNumberField = value;
                this.RaisePropertyChanged("TerminalNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=8)]
        public BillPaymentReconciliationDetailItem[] ReconciliationDetail {
            get {
                return this.reconciliationDetailField;
            }
            set {
                this.reconciliationDetailField = value;
                this.RaisePropertyChanged("ReconciliationDetail");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class AdditionalPhone : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string phoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
                this.RaisePropertyChanged("PhoneNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class AdditionalPhonesData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private AdditionalPhone[] additionalPhonesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public AdditionalPhone[] AdditionalPhones {
            get {
                return this.additionalPhonesField;
            }
            set {
                this.additionalPhonesField = value;
                this.RaisePropertyChanged("AdditionalPhones");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class AccessPhone : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string stateField;
        
        private string cityField;
        
        private string phoneField;
        
        private string accessLanguageField;
        
        private string accessTypeField;
        
        private string areaCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
                this.RaisePropertyChanged("State");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
                this.RaisePropertyChanged("City");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string AccessLanguage {
            get {
                return this.accessLanguageField;
            }
            set {
                this.accessLanguageField = value;
                this.RaisePropertyChanged("AccessLanguage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string AccessType {
            get {
                return this.accessTypeField;
            }
            set {
                this.accessTypeField = value;
                this.RaisePropertyChanged("AccessType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
                this.RaisePropertyChanged("AreaCode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ReconciliationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private long resultIdField;
        
        private string resultDescriptionField;
        
        private string terminalNumberField;
        
        private string batchDateField;
        
        private string batchNumberField;
        
        private int totalRecordsField;
        
        private double totalPaymentAmountField;
        
        private double totalFeeAmountField;
        
        private int recordsInDetailField;
        
        private object[] reconciliationDetailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public long resultId {
            get {
                return this.resultIdField;
            }
            set {
                this.resultIdField = value;
                this.RaisePropertyChanged("resultId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string resultDescription {
            get {
                return this.resultDescriptionField;
            }
            set {
                this.resultDescriptionField = value;
                this.RaisePropertyChanged("resultDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TerminalNumber {
            get {
                return this.terminalNumberField;
            }
            set {
                this.terminalNumberField = value;
                this.RaisePropertyChanged("TerminalNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BatchDate {
            get {
                return this.batchDateField;
            }
            set {
                this.batchDateField = value;
                this.RaisePropertyChanged("BatchDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BatchNumber {
            get {
                return this.batchNumberField;
            }
            set {
                this.batchNumberField = value;
                this.RaisePropertyChanged("BatchNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public int TotalRecords {
            get {
                return this.totalRecordsField;
            }
            set {
                this.totalRecordsField = value;
                this.RaisePropertyChanged("TotalRecords");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double TotalPaymentAmount {
            get {
                return this.totalPaymentAmountField;
            }
            set {
                this.totalPaymentAmountField = value;
                this.RaisePropertyChanged("TotalPaymentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double TotalFeeAmount {
            get {
                return this.totalFeeAmountField;
            }
            set {
                this.totalFeeAmountField = value;
                this.RaisePropertyChanged("TotalFeeAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int RecordsInDetail {
            get {
                return this.recordsInDetailField;
            }
            set {
                this.recordsInDetailField = value;
                this.RaisePropertyChanged("RecordsInDetail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public object[] ReconciliationDetail {
            get {
                return this.reconciliationDetailField;
            }
            set {
                this.reconciliationDetailField = value;
                this.RaisePropertyChanged("ReconciliationDetail");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ReconciliationDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string trackingNumberField;
        
        private string referenceNumberField;
        
        private double paymentAmountField;
        
        private double feeShareField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string TrackingNumber {
            get {
                return this.trackingNumberField;
            }
            set {
                this.trackingNumberField = value;
                this.RaisePropertyChanged("TrackingNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double PaymentAmount {
            get {
                return this.paymentAmountField;
            }
            set {
                this.paymentAmountField = value;
                this.RaisePropertyChanged("PaymentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double FeeShare {
            get {
                return this.feeShareField;
            }
            set {
                this.feeShareField = value;
                this.RaisePropertyChanged("FeeShare");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TCABalanceResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TCAReplenishmentResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TCADocumentInquiryResponse))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TCADocumentPaymentResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class TCAResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime timestampField;
        
        private int responseCodeField;
        
        private string responseDescriptionField;
        
        private long referenceNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int ResponseCode {
            get {
                return this.responseCodeField;
            }
            set {
                this.responseCodeField = value;
                this.RaisePropertyChanged("ResponseCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ResponseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
                this.RaisePropertyChanged("ResponseDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
                this.RaisePropertyChanged("ReferenceNumber");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class TCABalanceResponse : TCAResponse {
        
        private string purchaseIdField;
        
        private string accountIdField;
        
        private double currentBalanceField;
        
        private double minimumReplenishmentAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string AccountId {
            get {
                return this.accountIdField;
            }
            set {
                this.accountIdField = value;
                this.RaisePropertyChanged("AccountId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double CurrentBalance {
            get {
                return this.currentBalanceField;
            }
            set {
                this.currentBalanceField = value;
                this.RaisePropertyChanged("CurrentBalance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double MinimumReplenishmentAmount {
            get {
                return this.minimumReplenishmentAmountField;
            }
            set {
                this.minimumReplenishmentAmountField = value;
                this.RaisePropertyChanged("MinimumReplenishmentAmount");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class TCAReplenishmentResponse : TCAResponse {
        
        private string updatedBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string UpdatedBalance {
            get {
                return this.updatedBalanceField;
            }
            set {
                this.updatedBalanceField = value;
                this.RaisePropertyChanged("UpdatedBalance");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class TCADocumentInquiryResponse : TCAResponse {
        
        private string purchaseIdField;
        
        private TCADocument requestedDocumentField;
        
        private TCADocument[] unpaidDocumentListField;
        
        private double unpaidDocumentListAmountField;
        
        private string responseMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PurchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                this.purchaseIdField = value;
                this.RaisePropertyChanged("PurchaseId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public TCADocument RequestedDocument {
            get {
                return this.requestedDocumentField;
            }
            set {
                this.requestedDocumentField = value;
                this.RaisePropertyChanged("RequestedDocument");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public TCADocument[] UnpaidDocumentList {
            get {
                return this.unpaidDocumentListField;
            }
            set {
                this.unpaidDocumentListField = value;
                this.RaisePropertyChanged("UnpaidDocumentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double UnpaidDocumentListAmount {
            get {
                return this.unpaidDocumentListAmountField;
            }
            set {
                this.unpaidDocumentListAmountField = value;
                this.RaisePropertyChanged("UnpaidDocumentListAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ResponseMessage {
            get {
                return this.responseMessageField;
            }
            set {
                this.responseMessageField = value;
                this.RaisePropertyChanged("ResponseMessage");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class TCADocument : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string documentIdField;
        
        private string documentDateField;
        
        private string documentDescriptionField;
        
        private double documentPaymentAmountField;
        
        private string documentPaymentDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
                this.RaisePropertyChanged("DocumentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DocumentDate {
            get {
                return this.documentDateField;
            }
            set {
                this.documentDateField = value;
                this.RaisePropertyChanged("DocumentDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DocumentDescription {
            get {
                return this.documentDescriptionField;
            }
            set {
                this.documentDescriptionField = value;
                this.RaisePropertyChanged("DocumentDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double DocumentPaymentAmount {
            get {
                return this.documentPaymentAmountField;
            }
            set {
                this.documentPaymentAmountField = value;
                this.RaisePropertyChanged("DocumentPaymentAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DocumentPaymentDate {
            get {
                return this.documentPaymentDateField;
            }
            set {
                this.documentPaymentDateField = value;
                this.RaisePropertyChanged("DocumentPaymentDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class TCADocumentPaymentResponse : TCAResponse {
        
        private TCADocument[] paidDocumentListField;
        
        private double updatedBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public TCADocument[] PaidDocumentList {
            get {
                return this.paidDocumentListField;
            }
            set {
                this.paidDocumentListField = value;
                this.RaisePropertyChanged("PaidDocumentList");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double UpdatedBalance {
            get {
                return this.updatedBalanceField;
            }
            set {
                this.updatedBalanceField = value;
                this.RaisePropertyChanged("UpdatedBalance");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Response : object, System.ComponentModel.INotifyPropertyChanged {
        
        private enStatus statusField;
        
        private object responseDescriptionField;
        
        private decimal balanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public enStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public object ResponseDescription {
            get {
                return this.responseDescriptionField;
            }
            set {
                this.responseDescriptionField = value;
                this.RaisePropertyChanged("ResponseDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
                this.RaisePropertyChanged("Balance");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public enum enStatus {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Fail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class CallDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string phoneField;
        
        private System.DateTime answerTimeField;
        
        private decimal callRecIdField;
        
        private string cldNumField;
        
        private string clgNumField;
        
        private System.DateTime connectTimeField;
        
        private string dialedNumField;
        
        private System.DateTime disconnectTimeField;
        
        private string destinationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime AnswerTime {
            get {
                return this.answerTimeField;
            }
            set {
                this.answerTimeField = value;
                this.RaisePropertyChanged("AnswerTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public decimal CallRecId {
            get {
                return this.callRecIdField;
            }
            set {
                this.callRecIdField = value;
                this.RaisePropertyChanged("CallRecId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CldNum {
            get {
                return this.cldNumField;
            }
            set {
                this.cldNumField = value;
                this.RaisePropertyChanged("CldNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ClgNum {
            get {
                return this.clgNumField;
            }
            set {
                this.clgNumField = value;
                this.RaisePropertyChanged("ClgNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime ConnectTime {
            get {
                return this.connectTimeField;
            }
            set {
                this.connectTimeField = value;
                this.RaisePropertyChanged("ConnectTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DialedNum {
            get {
                return this.dialedNumField;
            }
            set {
                this.dialedNumField = value;
                this.RaisePropertyChanged("DialedNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public System.DateTime DisconnectTime {
            get {
                return this.disconnectTimeField;
            }
            set {
                this.disconnectTimeField = value;
                this.RaisePropertyChanged("DisconnectTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Destination {
            get {
                return this.destinationField;
            }
            set {
                this.destinationField = value;
                this.RaisePropertyChanged("Destination");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class DebitReason : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private long reasonIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long reasonId {
            get {
                return this.reasonIdField;
            }
            set {
                this.reasonIdField = value;
                this.RaisePropertyChanged("reasonId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Report : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime endDateField;
        
        private System.DateTime startDateField;
        
        private int totalPhonesField;
        
        private decimal totalBalanceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TotalPhones {
            get {
                return this.totalPhonesField;
            }
            set {
                this.totalPhonesField = value;
                this.RaisePropertyChanged("TotalPhones");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal TotalBalance {
            get {
                return this.totalBalanceField;
            }
            set {
                this.totalBalanceField = value;
                this.RaisePropertyChanged("TotalBalance");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class ReportDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string phoneField;
        
        private decimal balanceField;
        
        private System.DateTime creationDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
                this.RaisePropertyChanged("Phone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
                this.RaisePropertyChanged("Balance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime CreationDate {
            get {
                return this.creationDateField;
            }
            set {
                this.creationDateField = value;
                this.RaisePropertyChanged("CreationDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Catalog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        private int profileIDField;
        
        private string profileNameField;
        
        private string profileDescriptionField;
        
        private string profileRegionField;
        
        private string profileStateField;
        
        private string profileTypeField;
        
        private string profileTypeDescField;
        
        private object[] productListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ErrorCode {
            get {
                return this.errorCodeField;
            }
            set {
                this.errorCodeField = value;
                this.RaisePropertyChanged("ErrorCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int ProfileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
                this.RaisePropertyChanged("ProfileID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ProfileName {
            get {
                return this.profileNameField;
            }
            set {
                this.profileNameField = value;
                this.RaisePropertyChanged("ProfileName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ProfileDescription {
            get {
                return this.profileDescriptionField;
            }
            set {
                this.profileDescriptionField = value;
                this.RaisePropertyChanged("ProfileDescription");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ProfileRegion {
            get {
                return this.profileRegionField;
            }
            set {
                this.profileRegionField = value;
                this.RaisePropertyChanged("ProfileRegion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ProfileState {
            get {
                return this.profileStateField;
            }
            set {
                this.profileStateField = value;
                this.RaisePropertyChanged("ProfileState");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ProfileType {
            get {
                return this.profileTypeField;
            }
            set {
                this.profileTypeField = value;
                this.RaisePropertyChanged("ProfileType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ProfileTypeDesc {
            get {
                return this.profileTypeDescField;
            }
            set {
                this.profileTypeDescField = value;
                this.RaisePropertyChanged("ProfileTypeDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public object[] ProductList {
            get {
                return this.productListField;
            }
            set {
                this.productListField = value;
                this.RaisePropertyChanged("ProductList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Denomination : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string denominationIDField;
        
        private string denominationCodeField;
        
        private string denominationValueField;
        
        private string denominationBarcodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DenominationID {
            get {
                return this.denominationIDField;
            }
            set {
                this.denominationIDField = value;
                this.RaisePropertyChanged("DenominationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DenominationCode {
            get {
                return this.denominationCodeField;
            }
            set {
                this.denominationCodeField = value;
                this.RaisePropertyChanged("DenominationCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DenominationValue {
            get {
                return this.denominationValueField;
            }
            set {
                this.denominationValueField = value;
                this.RaisePropertyChanged("DenominationValue");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string DenominationBarcode {
            get {
                return this.denominationBarcodeField;
            }
            set {
                this.denominationBarcodeField = value;
                this.RaisePropertyChanged("DenominationBarcode");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Product : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cardIDField;
        
        private string productMaincodeField;
        
        private string availableDenominationsField;
        
        private object[] denominationsField;
        
        private string productNameField;
        
        private string productTypeField;
        
        private string productTypeDescField;
        
        private string disclaimerField;
        
        private string disclaimerSpanishField;
        
        private string carrierField;
        
        private string recommendedUseField;
        
        private string searchableField;
        
        private string accessTypeField;
        
        private string accessTypeDescField;
        
        private string instructionsField;
        
        private string printerDisclaimerField;
        
        private string productBarcodeField;
        
        private string targetCountryField;
        
        private string countryCodeField;
        
        private decimal topUpMinAmountField;
        
        private decimal topUpMaxAmountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CardID {
            get {
                return this.cardIDField;
            }
            set {
                this.cardIDField = value;
                this.RaisePropertyChanged("CardID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ProductMaincode {
            get {
                return this.productMaincodeField;
            }
            set {
                this.productMaincodeField = value;
                this.RaisePropertyChanged("ProductMaincode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string AvailableDenominations {
            get {
                return this.availableDenominationsField;
            }
            set {
                this.availableDenominationsField = value;
                this.RaisePropertyChanged("AvailableDenominations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public object[] Denominations {
            get {
                return this.denominationsField;
            }
            set {
                this.denominationsField = value;
                this.RaisePropertyChanged("Denominations");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
                this.RaisePropertyChanged("ProductName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
                this.RaisePropertyChanged("ProductType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ProductTypeDesc {
            get {
                return this.productTypeDescField;
            }
            set {
                this.productTypeDescField = value;
                this.RaisePropertyChanged("ProductTypeDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Disclaimer {
            get {
                return this.disclaimerField;
            }
            set {
                this.disclaimerField = value;
                this.RaisePropertyChanged("Disclaimer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string DisclaimerSpanish {
            get {
                return this.disclaimerSpanishField;
            }
            set {
                this.disclaimerSpanishField = value;
                this.RaisePropertyChanged("DisclaimerSpanish");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Carrier {
            get {
                return this.carrierField;
            }
            set {
                this.carrierField = value;
                this.RaisePropertyChanged("Carrier");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string RecommendedUse {
            get {
                return this.recommendedUseField;
            }
            set {
                this.recommendedUseField = value;
                this.RaisePropertyChanged("RecommendedUse");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Searchable {
            get {
                return this.searchableField;
            }
            set {
                this.searchableField = value;
                this.RaisePropertyChanged("Searchable");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string AccessType {
            get {
                return this.accessTypeField;
            }
            set {
                this.accessTypeField = value;
                this.RaisePropertyChanged("AccessType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string AccessTypeDesc {
            get {
                return this.accessTypeDescField;
            }
            set {
                this.accessTypeDescField = value;
                this.RaisePropertyChanged("AccessTypeDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string Instructions {
            get {
                return this.instructionsField;
            }
            set {
                this.instructionsField = value;
                this.RaisePropertyChanged("Instructions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string PrinterDisclaimer {
            get {
                return this.printerDisclaimerField;
            }
            set {
                this.printerDisclaimerField = value;
                this.RaisePropertyChanged("PrinterDisclaimer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string ProductBarcode {
            get {
                return this.productBarcodeField;
            }
            set {
                this.productBarcodeField = value;
                this.RaisePropertyChanged("ProductBarcode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string TargetCountry {
            get {
                return this.targetCountryField;
            }
            set {
                this.targetCountryField = value;
                this.RaisePropertyChanged("TargetCountry");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
                this.RaisePropertyChanged("CountryCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public decimal TopUpMinAmount {
            get {
                return this.topUpMinAmountField;
            }
            set {
                this.topUpMinAmountField = value;
                this.RaisePropertyChanged("TopUpMinAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public decimal TopUpMaxAmount {
            get {
                return this.topUpMaxAmountField;
            }
            set {
                this.topUpMaxAmountField = value;
                this.RaisePropertyChanged("TopUpMaxAmount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Destination : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string destinationIDField;
        
        private string countryNameField;
        
        private string cityNameField;
        
        private string countrySpanishField;
        
        private string citySpanishField;
        
        private string destinationTypeField;
        
        private string destinationTypeDescField;
        
        private string destinationTypeOrderField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DestinationID {
            get {
                return this.destinationIDField;
            }
            set {
                this.destinationIDField = value;
                this.RaisePropertyChanged("DestinationID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CountryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
                this.RaisePropertyChanged("CountryName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CityName {
            get {
                return this.cityNameField;
            }
            set {
                this.cityNameField = value;
                this.RaisePropertyChanged("CityName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CountrySpanish {
            get {
                return this.countrySpanishField;
            }
            set {
                this.countrySpanishField = value;
                this.RaisePropertyChanged("CountrySpanish");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CitySpanish {
            get {
                return this.citySpanishField;
            }
            set {
                this.citySpanishField = value;
                this.RaisePropertyChanged("CitySpanish");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DestinationType {
            get {
                return this.destinationTypeField;
            }
            set {
                this.destinationTypeField = value;
                this.RaisePropertyChanged("DestinationType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string DestinationTypeDesc {
            get {
                return this.destinationTypeDescField;
            }
            set {
                this.destinationTypeDescField = value;
                this.RaisePropertyChanged("DestinationTypeDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string DestinationTypeOrder {
            get {
                return this.destinationTypeOrderField;
            }
            set {
                this.destinationTypeOrderField = value;
                this.RaisePropertyChanged("DestinationTypeOrder");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker")]
    public partial class Legal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string versionField;
        
        private string copyrightField;
        
        private string disclaimerField;
        
        private string privacyURLField;
        
        private string termsAndConditionsField;
        
        private string contactPhoneField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
                this.RaisePropertyChanged("Copyright");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Disclaimer {
            get {
                return this.disclaimerField;
            }
            set {
                this.disclaimerField = value;
                this.RaisePropertyChanged("Disclaimer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string PrivacyURL {
            get {
                return this.privacyURLField;
            }
            set {
                this.privacyURLField = value;
                this.RaisePropertyChanged("PrivacyURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TermsAndConditions {
            get {
                return this.termsAndConditionsField;
            }
            set {
                this.termsAndConditionsField = value;
                this.RaisePropertyChanged("TermsAndConditions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ContactPhone {
            get {
                return this.contactPhoneField;
            }
            set {
                this.contactPhoneField = value;
                this.RaisePropertyChanged("ContactPhone");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSinglePIN", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetSinglePINRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string ProductMaincode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=5)]
        public decimal ProductDenomination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=6)]
        public int OrderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=7)]
        public int ProfileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=8)]
        public string TransactionMode;
        
        public GetSinglePINRequest() {
        }
        
        public GetSinglePINRequest(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int OrderID, int ProfileID, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.ProductMaincode = ProductMaincode;
            this.ProductDenomination = ProductDenomination;
            this.OrderID = OrderID;
            this.ProfileID = ProfileID;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSinglePINResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetSinglePINResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetSinglePINResult")]
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetSinglePINResult;
        
        public GetSinglePINResponse() {
        }
        
        public GetSinglePINResponse(OrdersGateway.com.blackstoneonline.services.PIN[] GetSinglePINResult) {
            this.GetSinglePINResult = GetSinglePINResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSinglePINSerial", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetSinglePINSerialRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string ProductMaincode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=5)]
        public decimal ProductDenomination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=6)]
        public int OrderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=7)]
        public int ProfileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=8)]
        public string TransactionMode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=9)]
        public string TerminalSerialNumber;
        
        public GetSinglePINSerialRequest() {
        }
        
        public GetSinglePINSerialRequest(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int OrderID, int ProfileID, string TransactionMode, string TerminalSerialNumber) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.ProductMaincode = ProductMaincode;
            this.ProductDenomination = ProductDenomination;
            this.OrderID = OrderID;
            this.ProfileID = ProfileID;
            this.TransactionMode = TransactionMode;
            this.TerminalSerialNumber = TerminalSerialNumber;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSinglePINSerialResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetSinglePINSerialResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetSinglePINSerialResult")]
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetSinglePINSerialResult;
        
        public GetSinglePINSerialResponse() {
        }
        
        public GetSinglePINSerialResponse(OrdersGateway.com.blackstoneonline.services.PIN[] GetSinglePINSerialResult) {
            this.GetSinglePINSerialResult = GetSinglePINSerialResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMultiplePIN", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetMultiplePINRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string ProductMaincode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=5)]
        public decimal ProductDenomination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=6)]
        public int QtyPINs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=7)]
        public int OrderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=8)]
        public int ProfileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=9)]
        public string TransactionMode;
        
        public GetMultiplePINRequest() {
        }
        
        public GetMultiplePINRequest(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int QtyPINs, int OrderID, int ProfileID, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.ProductMaincode = ProductMaincode;
            this.ProductDenomination = ProductDenomination;
            this.QtyPINs = QtyPINs;
            this.OrderID = OrderID;
            this.ProfileID = ProfileID;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMultiplePINResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetMultiplePINResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetMultiplePINResult")]
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetMultiplePINResult;
        
        public GetMultiplePINResponse() {
        }
        
        public GetMultiplePINResponse(OrdersGateway.com.blackstoneonline.services.PIN[] GetMultiplePINResult) {
            this.GetMultiplePINResult = GetMultiplePINResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMultiplePINLite", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetMultiplePINLiteRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string ProductMaincode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=5)]
        public decimal ProductDenomination;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=6)]
        public int QtyPINs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=7)]
        public int OrderID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=8)]
        public int ProfileID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=9)]
        public string TransactionMode;
        
        public GetMultiplePINLiteRequest() {
        }
        
        public GetMultiplePINLiteRequest(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int QtyPINs, int OrderID, int ProfileID, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.ProductMaincode = ProductMaincode;
            this.ProductDenomination = ProductDenomination;
            this.QtyPINs = QtyPINs;
            this.OrderID = OrderID;
            this.ProfileID = ProfileID;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMultiplePINLiteResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetMultiplePINLiteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetMultiplePINLiteResult")]
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetMultiplePINLiteResult;
        
        public GetMultiplePINLiteResponse() {
        }
        
        public GetMultiplePINLiteResponse(OrdersGateway.com.blackstoneonline.services.PIN[] GetMultiplePINLiteResult) {
            this.GetMultiplePINLiteResult = GetMultiplePINLiteResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum DocumentType {
        
        /// <remarks/>
        Invoice,
        
        /// <remarks/>
        Violation,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OKPinlessGetCallHistory", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class OKPinlessGetCallHistoryRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string AccountPhoneNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=5)]
        public System.DateTime StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=6)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=7)]
        public string TransactionMode;
        
        public OKPinlessGetCallHistoryRequest() {
        }
        
        public OKPinlessGetCallHistoryRequest(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, System.DateTime StartDate, System.DateTime EndDate, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.AccountPhoneNumber = AccountPhoneNumber;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OKPinlessGetCallHistoryResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class OKPinlessGetCallHistoryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("OKPinlessGetCallHistoryResult")]
        public OrdersGateway.com.blackstoneonline.services.CallDetail[] OKPinlessGetCallHistoryResult;
        
        public OKPinlessGetCallHistoryResponse() {
        }
        
        public OKPinlessGetCallHistoryResponse(OrdersGateway.com.blackstoneonline.services.CallDetail[] OKPinlessGetCallHistoryResult) {
            this.OKPinlessGetCallHistoryResult = OKPinlessGetCallHistoryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OKPinlessGetCreditReasons", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class OKPinlessGetCreditReasonsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string TransactionMode;
        
        public OKPinlessGetCreditReasonsRequest() {
        }
        
        public OKPinlessGetCreditReasonsRequest(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OKPinlessGetCreditReasonsResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class OKPinlessGetCreditReasonsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("OKPinlessGetCreditReasonsResult")]
        public OrdersGateway.com.blackstoneonline.services.DebitReason[] OKPinlessGetCreditReasonsResult;
        
        public OKPinlessGetCreditReasonsResponse() {
        }
        
        public OKPinlessGetCreditReasonsResponse(OrdersGateway.com.blackstoneonline.services.DebitReason[] OKPinlessGetCreditReasonsResult) {
            this.OKPinlessGetCreditReasonsResult = OKPinlessGetCreditReasonsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OKPinlessGetPhoneReportDatailed", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class OKPinlessGetPhoneReportDatailed {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string AccountPhoneNumber;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=5)]
        public string TransactionMode;
        
        public OKPinlessGetPhoneReportDatailed() {
        }
        
        public OKPinlessGetPhoneReportDatailed(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.AccountPhoneNumber = AccountPhoneNumber;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="OKPinlessGetPhoneReportDatailedResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class OKPinlessGetPhoneReportDatailed1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("OKPinlessGetPhoneReportDatailedResult")]
        public OrdersGateway.com.blackstoneonline.services.ReportDetail[] OKPinlessGetPhoneReportDatailedResult;
        
        public OKPinlessGetPhoneReportDatailed1() {
        }
        
        public OKPinlessGetPhoneReportDatailed1(OrdersGateway.com.blackstoneonline.services.ReportDetail[] OKPinlessGetPhoneReportDatailedResult) {
            this.OKPinlessGetPhoneReportDatailedResult = OKPinlessGetPhoneReportDatailedResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductProfiles", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetProductProfilesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string TransactionMode;
        
        public GetProductProfilesRequest() {
        }
        
        public GetProductProfilesRequest(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProductProfilesResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetProductProfilesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetProductProfilesResult")]
        public OrdersGateway.com.blackstoneonline.services.Catalog[] GetProductProfilesResult;
        
        public GetProductProfilesResponse() {
        }
        
        public GetProductProfilesResponse(OrdersGateway.com.blackstoneonline.services.Catalog[] GetProductProfilesResult) {
            this.GetProductProfilesResult = GetProductProfilesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllDestinations", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetAllDestinationsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        public string MID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=1)]
        public string TID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=2)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=3)]
        public string Cashier;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=4)]
        public string TransactionMode;
        
        public GetAllDestinationsRequest() {
        }
        
        public GetAllDestinationsRequest(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            this.MID = MID;
            this.TID = TID;
            this.Password = Password;
            this.Cashier = Cashier;
            this.TransactionMode = TransactionMode;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllDestinationsResponse", WrapperNamespace="https://services.blackstoneonline.com/TransactionBroker/Broker", IsWrapped=true)]
    public partial class GetAllDestinationsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://services.blackstoneonline.com/TransactionBroker/Broker", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetAllDestinationsResult")]
        public OrdersGateway.com.blackstoneonline.services.Destination[] GetAllDestinationsResult;
        
        public GetAllDestinationsResponse() {
        }
        
        public GetAllDestinationsResponse(OrdersGateway.com.blackstoneonline.services.Destination[] GetAllDestinationsResult) {
            this.GetAllDestinationsResult = GetAllDestinationsResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface BrokerSoapChannel : OrdersGateway.com.blackstoneonline.services.BrokerSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BrokerSoapClient : System.ServiceModel.ClientBase<OrdersGateway.com.blackstoneonline.services.BrokerSoap>, OrdersGateway.com.blackstoneonline.services.BrokerSoap {
        
        public BrokerSoapClient() {
        }
        
        public BrokerSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BrokerSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrokerSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BrokerSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.GetSinglePINResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetSinglePIN(OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest request) {
            return base.Channel.GetSinglePIN(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetSinglePIN(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int OrderID, int ProfileID, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.GetSinglePINResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetSinglePIN(inValue);
            return retVal.GetSinglePINResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetSinglePINResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetSinglePINAsync(OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest request) {
            return base.Channel.GetSinglePINAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetSinglePINResponse> GetSinglePINAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int OrderID, int ProfileID, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetSinglePINRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetSinglePINAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetSinglePINSerial(OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest request) {
            return base.Channel.GetSinglePINSerial(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetSinglePINSerial(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int OrderID, int ProfileID, string TransactionMode, string TerminalSerialNumber) {
            OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            inValue.TerminalSerialNumber = TerminalSerialNumber;
            OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetSinglePINSerial(inValue);
            return retVal.GetSinglePINSerialResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetSinglePINSerialAsync(OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest request) {
            return base.Channel.GetSinglePINSerialAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialResponse> GetSinglePINSerialAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int OrderID, int ProfileID, string TransactionMode, string TerminalSerialNumber) {
            OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetSinglePINSerialRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            inValue.TerminalSerialNumber = TerminalSerialNumber;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetSinglePINSerialAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.GetMultiplePINResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetMultiplePIN(OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest request) {
            return base.Channel.GetMultiplePIN(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetMultiplePIN(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int QtyPINs, int OrderID, int ProfileID, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.QtyPINs = QtyPINs;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.GetMultiplePINResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetMultiplePIN(inValue);
            return retVal.GetMultiplePINResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetMultiplePINResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetMultiplePINAsync(OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest request) {
            return base.Channel.GetMultiplePINAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetMultiplePINResponse> GetMultiplePINAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int QtyPINs, int OrderID, int ProfileID, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetMultiplePINRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.QtyPINs = QtyPINs;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetMultiplePINAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetMultiplePINLite(OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest request) {
            return base.Channel.GetMultiplePINLite(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN[] GetMultiplePINLite(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int QtyPINs, int OrderID, int ProfileID, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.QtyPINs = QtyPINs;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetMultiplePINLite(inValue);
            return retVal.GetMultiplePINLiteResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetMultiplePINLiteAsync(OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest request) {
            return base.Channel.GetMultiplePINLiteAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteResponse> GetMultiplePINLiteAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, decimal ProductDenomination, int QtyPINs, int OrderID, int ProfileID, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetMultiplePINLiteRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.ProductMaincode = ProductMaincode;
            inValue.ProductDenomination = ProductDenomination;
            inValue.QtyPINs = QtyPINs;
            inValue.OrderID = OrderID;
            inValue.ProfileID = ProfileID;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetMultiplePINLiteAsync(inValue);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN VoidOrder(string MID, string TID, string Password, string Cashier, int OrderID, string TransactionMode) {
            return base.Channel.VoidOrder(MID, TID, Password, Cashier, OrderID, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> VoidOrderAsync(string MID, string TID, string Password, string Cashier, int OrderID, string TransactionMode) {
            return base.Channel.VoidOrderAsync(MID, TID, Password, Cashier, OrderID, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN DoTopUp(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode) {
            return base.Channel.DoTopUp(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode) {
            return base.Channel.DoTopUpAsync(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN DoTopUpWithAdditionalPhones(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, OrdersGateway.com.blackstoneonline.services.AdditionalPhonesData AdditionalPhones) {
            return base.Channel.DoTopUpWithAdditionalPhones(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode, AdditionalPhones);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpWithAdditionalPhonesAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, OrdersGateway.com.blackstoneonline.services.AdditionalPhonesData AdditionalPhones) {
            return base.Channel.DoTopUpWithAdditionalPhonesAsync(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode, AdditionalPhones);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN DoTopUpFee(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee) {
            return base.Channel.DoTopUpFee(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode, TransactionFee);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpFeeAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee) {
            return base.Channel.DoTopUpFeeAsync(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode, TransactionFee);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PIN DoTopUpFeeSerial(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee, string TerminalSerialNumber) {
            return base.Channel.DoTopUpFeeSerial(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode, TransactionFee, TerminalSerialNumber);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PIN> DoTopUpFeeSerialAsync(string MID, string TID, string Password, string Cashier, string ProductMaincode, string TopUpAmount, string PhoneNumber, string CountryCode, int OrderID, int ProfileID, string TransactionMode, double TransactionFee, string TerminalSerialNumber) {
            return base.Channel.DoTopUpFeeSerialAsync(MID, TID, Password, Cashier, ProductMaincode, TopUpAmount, PhoneNumber, CountryCode, OrderID, ProfileID, TransactionMode, TransactionFee, TerminalSerialNumber);
        }
        
        public OrdersGateway.com.blackstoneonline.services.BillPaymentReconciliationResponse DoDailyReconciliation(string MID, string TID, string Password, string Cashier, System.DateTime batchDate, bool detailedResponse, long transactionId, string TransactionMode) {
            return base.Channel.DoDailyReconciliation(MID, TID, Password, Cashier, batchDate, detailedResponse, transactionId, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillPaymentReconciliationResponse> DoDailyReconciliationAsync(string MID, string TID, string Password, string Cashier, System.DateTime batchDate, bool detailedResponse, long transactionId, string TransactionMode) {
            return base.Channel.DoDailyReconciliationAsync(MID, TID, Password, Cashier, batchDate, detailedResponse, transactionId, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.BillPaymentResponse DoBillPresentment(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode) {
            return base.Channel.DoBillPresentment(MID, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, transactionId, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillPaymentResponse> DoBillPresentmentAsync(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode) {
            return base.Channel.DoBillPresentmentAsync(MID, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, transactionId, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.BillPaymentResponse DoBillPayment(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode) {
            return base.Channel.DoBillPayment(MID, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, transactionId, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillPaymentResponse> DoBillPaymentAsync(
                    string MID, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    long transactionId, 
                    string TransactionMode) {
            return base.Channel.DoBillPaymentAsync(MID, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, transactionId, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.BillerCategoriesResponse GetBillerCategories(string MID, string TID, string Password, string Cashier, long transactionId, string TransactionMode) {
            return base.Channel.GetBillerCategories(MID, TID, Password, Cashier, transactionId, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BillerCategoriesResponse> GetBillerCategoriesAsync(string MID, string TID, string Password, string Cashier, long transactionId, string TransactionMode) {
            return base.Channel.GetBillerCategoriesAsync(MID, TID, Password, Cashier, transactionId, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.MasterBillersByCategoryResponse GetMasterBillersByCategory(string MID, string TID, string Password, string Cashier, string CategoryId, long transactionId, string TransactionMode) {
            return base.Channel.GetMasterBillersByCategory(MID, TID, Password, Cashier, CategoryId, transactionId, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MasterBillersByCategoryResponse> GetMasterBillersByCategoryAsync(string MID, string TID, string Password, string Cashier, string CategoryId, long transactionId, string TransactionMode) {
            return base.Channel.GetMasterBillersByCategoryAsync(MID, TID, Password, Cashier, CategoryId, transactionId, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.MasterBillerPaymentOptionsResponse GetMasterBillerPaymentOptions(string MID, string TID, string Password, string Cashier, string MasterBillerId, long transactionId, string TransactionMode) {
            return base.Channel.GetMasterBillerPaymentOptions(MID, TID, Password, Cashier, MasterBillerId, transactionId, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MasterBillerPaymentOptionsResponse> GetMasterBillerPaymentOptionsAsync(string MID, string TID, string Password, string Cashier, string MasterBillerId, long transactionId, string TransactionMode) {
            return base.Channel.GetMasterBillerPaymentOptionsAsync(MID, TID, Password, Cashier, MasterBillerId, transactionId, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Category[] GetBillersCategoriesOld(int MerchantId, string TID, string Password, string Cashier) {
            return base.Channel.GetBillersCategoriesOld(MerchantId, TID, Password, Cashier);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Category[]> GetBillersCategoriesOldAsync(int MerchantId, string TID, string Password, string Cashier) {
            return base.Channel.GetBillersCategoriesOldAsync(MerchantId, TID, Password, Cashier);
        }
        
        public OrdersGateway.com.blackstoneonline.services.MasterBiller[] GetMasterBillersByCategoryOld(int MerchantId, string TID, string Password, string Cashier, string CategoryId) {
            return base.Channel.GetMasterBillersByCategoryOld(MerchantId, TID, Password, Cashier, CategoryId);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MasterBiller[]> GetMasterBillersByCategoryOldAsync(int MerchantId, string TID, string Password, string Cashier, string CategoryId) {
            return base.Channel.GetMasterBillersByCategoryOldAsync(MerchantId, TID, Password, Cashier, CategoryId);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PaymentOptionOld[] GetMasterBillerPaymentOptionsOld(int MerchantId, string TID, string Password, string Cashier, string MasterBillerId) {
            return base.Channel.GetMasterBillerPaymentOptionsOld(MerchantId, TID, Password, Cashier, MasterBillerId);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentOptionOld[]> GetMasterBillerPaymentOptionsOldAsync(int MerchantId, string TID, string Password, string Cashier, string MasterBillerId) {
            return base.Channel.GetMasterBillerPaymentOptionsOldAsync(MerchantId, TID, Password, Cashier, MasterBillerId);
        }
        
        public OrdersGateway.com.blackstoneonline.services.BalanceResponse GetSunPassBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string transactionMode) {
            return base.Channel.GetSunPassBalance(merchantId, TID, password, cashier, accountNumber, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.BalanceResponse> GetSunPassBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string transactionMode) {
            return base.Channel.GetSunPassBalanceAsync(merchantId, TID, password, cashier, accountNumber, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse DoSunPassReplenishment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode) {
            return base.Channel.DoSunPassReplenishment(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse> DoSunPassReplenishmentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode) {
            return base.Channel.DoSunPassReplenishmentAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse DoSunPassReplenishmentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string transactionMode) {
            return base.Channel.DoSunPassReplenishmentByStore(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReplenishmentResponse> DoSunPassReplenishmentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string transactionMode) {
            return base.Channel.DoSunPassReplenishmentByStoreAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse DoSunPassDocumentInquiry(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string transactionMode) {
            return base.Channel.DoSunPassDocumentInquiry(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse> DoSunPassDocumentInquiryAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string transactionMode) {
            return base.Channel.DoSunPassDocumentInquiryAsync(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse DoSunPassDocumentInquiryByStore(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoSunPassDocumentInquiryByStore(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, storeId, zipCode, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentInquiryResponse> DoSunPassDocumentInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoSunPassDocumentInquiryByStoreAsync(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, storeId, zipCode, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse DoSunPassDocumentPayment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string transactionMode) {
            return base.Channel.DoSunPassDocumentPayment(merchantId, TID, password, cashier, transactionId, accountNumber, licensePlateNumber, amount, feeAmount, purchaseId, paidDocuments, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse> DoSunPassDocumentPaymentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string transactionMode) {
            return base.Channel.DoSunPassDocumentPaymentAsync(merchantId, TID, password, cashier, transactionId, accountNumber, licensePlateNumber, amount, feeAmount, purchaseId, paidDocuments, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse DoSunPassDocumentPaymentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string storeId, string transactionMode) {
            return base.Channel.DoSunPassDocumentPaymentByStore(merchantId, TID, password, cashier, transactionId, accountNumber, licensePlateNumber, amount, feeAmount, purchaseId, paidDocuments, storeId, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.DocumentPaymentResponse> DoSunPassDocumentPaymentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, string licensePlateNumber, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.Document[] paidDocuments, string storeId, string transactionMode) {
            return base.Channel.DoSunPassDocumentPaymentByStoreAsync(merchantId, TID, password, cashier, transactionId, accountNumber, licensePlateNumber, amount, feeAmount, purchaseId, paidDocuments, storeId, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ProductListResponse GetProductList(string MID, string TID, string Password, string cashier, long TransactionId) {
            return base.Channel.GetProductList(MID, TID, Password, cashier, TransactionId);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListResponse> GetProductListAsync(string MID, string TID, string Password, string cashier, long TransactionId) {
            return base.Channel.GetProductListAsync(MID, TID, Password, cashier, TransactionId);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ProductListResponse GetProductListByProductSbt(string MID, string TID, string Password, string cashier, long TransactionId, string ProductSbt) {
            return base.Channel.GetProductListByProductSbt(MID, TID, Password, cashier, TransactionId, ProductSbt);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListResponse> GetProductListByProductSbtAsync(string MID, string TID, string Password, string cashier, long TransactionId, string ProductSbt) {
            return base.Channel.GetProductListByProductSbtAsync(MID, TID, Password, cashier, TransactionId, ProductSbt);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ProductListResponse GetProductListByProductMainCode(string MID, string TID, string Password, string cashier, long TransactionId, string ProductMainCode) {
            return base.Channel.GetProductListByProductMainCode(MID, TID, Password, cashier, TransactionId, ProductMainCode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListResponse> GetProductListByProductMainCodeAsync(string MID, string TID, string Password, string cashier, long TransactionId, string ProductMainCode) {
            return base.Channel.GetProductListByProductMainCodeAsync(MID, TID, Password, cashier, TransactionId, ProductMainCode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ProductListVersionResponse GetProductListVersionNumber(string MID, string TID, string Password, string cashier, long TransactionId) {
            return base.Channel.GetProductListVersionNumber(MID, TID, Password, cashier, TransactionId);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductListVersionResponse> GetProductListVersionNumberAsync(string MID, string TID, string Password, string cashier, long TransactionId) {
            return base.Channel.GetProductListVersionNumberAsync(MID, TID, Password, cashier, TransactionId);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ProductRatesResponse GetProductRates(string MID, string TID, string Password, string cashier, string ProductMainCode, long TransactionId) {
            return base.Channel.GetProductRates(MID, TID, Password, cashier, ProductMainCode, TransactionId);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductRatesResponse> GetProductRatesAsync(string MID, string TID, string Password, string cashier, string ProductMainCode, long TransactionId) {
            return base.Channel.GetProductRatesAsync(MID, TID, Password, cashier, ProductMainCode, TransactionId);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ProductLocalPhonesResponse GetProductLocalPhonesByMerchantId(string MID, string TID, string Password, string ProductMaincode) {
            return base.Channel.GetProductLocalPhonesByMerchantId(MID, TID, Password, ProductMaincode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ProductLocalPhonesResponse> GetProductLocalPhonesByMerchantIdAsync(string MID, string TID, string Password, string ProductMaincode) {
            return base.Channel.GetProductLocalPhonesByMerchantIdAsync(MID, TID, Password, ProductMaincode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPaymentOld(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode) {
            return base.Channel.DoBillPaymentOld(MerchantId, TID, Password, Cashier, orderId, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, remitTiming, bypassType, paymentType, senderFirstName, senderLastName, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPaymentOldAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode) {
            return base.Channel.DoBillPaymentOldAsync(MerchantId, TID, Password, Cashier, orderId, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, remitTiming, bypassType, paymentType, senderFirstName, senderLastName, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPaymentOldSerial(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber) {
            return base.Channel.DoBillPaymentOldSerial(MerchantId, TID, Password, Cashier, orderId, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, remitTiming, bypassType, paymentType, senderFirstName, senderLastName, TransactionMode, TerminalSerialNumber);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPaymentOldSerialAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    int orderId, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string remitTiming, 
                    string bypassType, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber) {
            return base.Channel.DoBillPaymentOldSerialAsync(MerchantId, TID, Password, Cashier, orderId, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, remitTiming, bypassType, paymentType, senderFirstName, senderLastName, TransactionMode, TerminalSerialNumber);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPresentmentOld(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode) {
            return base.Channel.DoBillPresentmentOld(MerchantId, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPresentmentOldAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode) {
            return base.Channel.DoBillPresentmentOldAsync(MerchantId, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PaymentResponse DoBillPresentmentOldSerial(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber) {
            return base.Channel.DoBillPresentmentOldSerial(MerchantId, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, TransactionMode, TerminalSerialNumber);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PaymentResponse> DoBillPresentmentOldSerialAsync(
                    int MerchantId, 
                    string TID, 
                    string Password, 
                    string Cashier, 
                    string vendorId, 
                    string accountNumber, 
                    string altAccountNumber, 
                    string additAccountNumber1, 
                    string additAccountNumber2, 
                    double paymentAmount, 
                    double feeAmount, 
                    string customerFirstName, 
                    string customerLastName, 
                    string paymentType, 
                    string senderFirstName, 
                    string senderLastName, 
                    string TransactionMode, 
                    string TerminalSerialNumber) {
            return base.Channel.DoBillPresentmentOldSerialAsync(MerchantId, TID, Password, Cashier, vendorId, accountNumber, altAccountNumber, additAccountNumber1, additAccountNumber2, paymentAmount, feeAmount, customerFirstName, customerLastName, paymentType, senderFirstName, senderLastName, TransactionMode, TerminalSerialNumber);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ReconciliationResponse DoDailyReconciliationOld(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode) {
            return base.Channel.DoDailyReconciliationOld(MerchantId, TID, Password, Cashier, batchDate, detailedResponse, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReconciliationResponse> DoDailyReconciliationOldAsync(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode) {
            return base.Channel.DoDailyReconciliationOldAsync(MerchantId, TID, Password, Cashier, batchDate, detailedResponse, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ReconciliationResponse DoDailyReconciliationOldSerial(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode, string TerminalSerialNumber) {
            return base.Channel.DoDailyReconciliationOldSerial(MerchantId, TID, Password, Cashier, batchDate, detailedResponse, TransactionMode, TerminalSerialNumber);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.ReconciliationResponse> DoDailyReconciliationOldSerialAsync(int MerchantId, string TID, string Password, string Cashier, string batchDate, bool detailedResponse, string TransactionMode, string TerminalSerialNumber) {
            return base.Channel.DoDailyReconciliationOldSerialAsync(MerchantId, TID, Password, Cashier, batchDate, detailedResponse, TransactionMode, TerminalSerialNumber);
        }
        
        public OrdersGateway.com.blackstoneonline.services.TCABalanceResponse GetTCATollsBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string accountZipCode, string transactionMode) {
            return base.Channel.GetTCATollsBalance(merchantId, TID, password, cashier, accountNumber, accountZipCode, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCABalanceResponse> GetTCATollsBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string accountZipCode, string transactionMode) {
            return base.Channel.GetTCATollsBalanceAsync(merchantId, TID, password, cashier, accountNumber, accountZipCode, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse DoTCATollsReplenishment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode) {
            return base.Channel.DoTCATollsReplenishment(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse> DoTCATollsReplenishmentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string transactionMode) {
            return base.Channel.DoTCATollsReplenishmentAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse DoTCATollsReplenishmentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoTCATollsReplenishmentByStore(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, zipCode, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCAReplenishmentResponse> DoTCATollsReplenishmentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, double amount, double feeAmount, string purchaseId, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoTCATollsReplenishmentByStoreAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, zipCode, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse DoTCATollsDocumentInquiry(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string transactionMode) {
            return base.Channel.DoTCATollsDocumentInquiry(merchantId, TID, password, cashier, accountNumber, accountId, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse> DoTCATollsDocumentInquiryAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string transactionMode) {
            return base.Channel.DoTCATollsDocumentInquiryAsync(merchantId, TID, password, cashier, accountNumber, accountId, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse DoTCATollsDocumentInquiryByStore(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoTCATollsDocumentInquiryByStore(merchantId, TID, password, cashier, accountNumber, accountId, storeId, zipCode, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentInquiryResponse> DoTCATollsDocumentInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string accountId, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoTCATollsDocumentInquiryByStoreAsync(merchantId, TID, password, cashier, accountNumber, accountId, storeId, zipCode, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse DoTCATollsDocumentPayment(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string transactionMode) {
            return base.Channel.DoTCATollsDocumentPayment(merchantId, TID, password, cashier, transactionId, amount, feeAmount, purchaseId, paidDocuments, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse> DoTCATollsDocumentPaymentAsync(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string transactionMode) {
            return base.Channel.DoTCATollsDocumentPaymentAsync(merchantId, TID, password, cashier, transactionId, amount, feeAmount, purchaseId, paidDocuments, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse DoTCATollsDocumentPaymentByStore(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoTCATollsDocumentPaymentByStore(merchantId, TID, password, cashier, transactionId, amount, feeAmount, purchaseId, paidDocuments, storeId, zipCode, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.TCADocumentPaymentResponse> DoTCATollsDocumentPaymentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, double amount, double feeAmount, string purchaseId, OrdersGateway.com.blackstoneonline.services.TCADocument[] paidDocuments, string storeId, string zipCode, string transactionMode) {
            return base.Channel.DoTCATollsDocumentPaymentByStoreAsync(merchantId, TID, password, cashier, transactionId, amount, feeAmount, purchaseId, paidDocuments, storeId, zipCode, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTBalanceResponse FastTrackGetAccountBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode) {
            return base.Channel.FastTrackGetAccountBalance(merchantId, TID, password, cashier, accountNumber, zipCode, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTBalanceResponse> FastTrackGetAccountBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode) {
            return base.Channel.FastTrackGetAccountBalanceAsync(merchantId, TID, password, cashier, accountNumber, zipCode, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishAccount(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishAccount(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishAccountAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishAccountAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishAccountByStore(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishAccountByStore(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, storeZip, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishAccountByStoreAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishAccountByStoreAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, storeZip, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTBalanceResponse FastTrackGetLicensePlateAccountBalance(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode) {
            return base.Channel.FastTrackGetLicensePlateAccountBalance(merchantId, TID, password, cashier, accountNumber, zipCode, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTBalanceResponse> FastTrackGetLicensePlateAccountBalanceAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string zipCode, string transactionMode) {
            return base.Channel.FastTrackGetLicensePlateAccountBalanceAsync(merchantId, TID, password, cashier, accountNumber, zipCode, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishLicensePlateAccount(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishLicensePlateAccount(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishLicensePlateAccountAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishLicensePlateAccountAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse FastTrackReplenishLicensePlateAccountByStore(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishLicensePlateAccountByStore(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, storeZip, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTReplenishmentResponse> FastTrackReplenishLicensePlateAccountByStoreAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string accountNumber, 
                    double amount, 
                    double feeAmount, 
                    string purchaseId, 
                    string storeId, 
                    string storeZip, 
                    string senderFirstName, 
                    string senderMiddleName, 
                    string senderLastName, 
                    string senderAddressLine1, 
                    string senderAddressLine2, 
                    string senderCity, 
                    string senderState, 
                    string senderZip, 
                    string transactionMode) {
            return base.Channel.FastTrackReplenishLicensePlateAccountByStoreAsync(merchantId, TID, password, cashier, transactionId, accountNumber, amount, feeAmount, purchaseId, storeId, storeZip, senderFirstName, senderMiddleName, senderLastName, senderAddressLine1, senderAddressLine2, senderCity, senderState, senderZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse FastTrackDocumentInquiry(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string transactionMode) {
            return base.Channel.FastTrackDocumentInquiry(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, documentType, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse> FastTrackDocumentInquiryAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string transactionMode) {
            return base.Channel.FastTrackDocumentInquiryAsync(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, documentType, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse FastTrackDocumentPayment(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string transactionMode) {
            return base.Channel.FastTrackDocumentPayment(merchantId, TID, password, cashier, transactionId, accountNumber, documentType, amount, feeAmount, purchaseId, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse> FastTrackDocumentPaymentAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string transactionMode) {
            return base.Channel.FastTrackDocumentPaymentAsync(merchantId, TID, password, cashier, transactionId, accountNumber, documentType, amount, feeAmount, purchaseId, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse FastTrackDocumentInquiryByStore(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string storeId, string storeZip, string transactionMode) {
            return base.Channel.FastTrackDocumentInquiryByStore(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, documentType, storeId, storeZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentInquiryResponse> FastTrackDocumentInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string accountNumber, string licensePlateNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, string storeId, string storeZip, string transactionMode) {
            return base.Channel.FastTrackDocumentInquiryByStoreAsync(merchantId, TID, password, cashier, accountNumber, licensePlateNumber, documentType, storeId, storeZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse FastTrackDocumentPaymentByStore(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string storeId, string storeZip, string transactionMode) {
            return base.Channel.FastTrackDocumentPaymentByStore(merchantId, TID, password, cashier, transactionId, accountNumber, documentType, amount, feeAmount, purchaseId, storeId, storeZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTDocumentPaymentResponse> FastTrackDocumentPaymentByStoreAsync(int merchantId, string TID, string password, string cashier, long transactionId, string accountNumber, OrdersGateway.com.blackstoneonline.services.DocumentType documentType, double amount, double feeAmount, string purchaseId, string storeId, string storeZip, string transactionMode) {
            return base.Channel.FastTrackDocumentPaymentByStoreAsync(merchantId, TID, password, cashier, transactionId, accountNumber, documentType, amount, feeAmount, purchaseId, storeId, storeZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse FastTrackOneTimeTollInquiry(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, int tripCount, string travelDate, string transactionMode) {
            return base.Channel.FastTrackOneTimeTollInquiry(merchantId, TID, password, cashier, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse> FastTrackOneTimeTollInquiryAsync(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, int tripCount, string travelDate, string transactionMode) {
            return base.Channel.FastTrackOneTimeTollInquiryAsync(merchantId, TID, password, cashier, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse FastTrackOneTimeTollPayment(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string transactionMode) {
            return base.Channel.FastTrackOneTimeTollPayment(merchantId, TID, password, cashier, transactionId, purchaseId, amount, feeAmount, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse> FastTrackOneTimeTollPaymentAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string transactionMode) {
            return base.Channel.FastTrackOneTimeTollPaymentAsync(merchantId, TID, password, cashier, transactionId, purchaseId, amount, feeAmount, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse FastTrackOneTimeTollInquiryByStore(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, string tripCount, string travelDate, string storeId, string storeZip, string transactionMode) {
            return base.Channel.FastTrackOneTimeTollInquiryByStore(merchantId, TID, password, cashier, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, storeId, storeZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollInquiryResponse> FastTrackOneTimeTollInquiryByStoreAsync(int merchantId, string TID, string password, string cashier, string licensePlateNumber, string licenseState, string vehicleAxle, string vehicleMake, string vehicleModel, string tripCount, string travelDate, string storeId, string storeZip, string transactionMode) {
            return base.Channel.FastTrackOneTimeTollInquiryByStoreAsync(merchantId, TID, password, cashier, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, storeId, storeZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse FastTrackOneTimeTollPaymentByStore(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string storeId, 
                    string storeZip, 
                    string transactionMode) {
            return base.Channel.FastTrackOneTimeTollPaymentByStore(merchantId, TID, password, cashier, transactionId, purchaseId, amount, feeAmount, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, storeId, storeZip, transactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.FTOneTimeTollPaymentResponse> FastTrackOneTimeTollPaymentByStoreAsync(
                    int merchantId, 
                    string TID, 
                    string password, 
                    string cashier, 
                    long transactionId, 
                    string purchaseId, 
                    double amount, 
                    double feeAmount, 
                    string licensePlateNumber, 
                    string licenseState, 
                    string vehicleAxle, 
                    string vehicleMake, 
                    string vehicleModel, 
                    string tripCount, 
                    string travelDate, 
                    string storeId, 
                    string storeZip, 
                    string transactionMode) {
            return base.Channel.FastTrackOneTimeTollPaymentByStoreAsync(merchantId, TID, password, cashier, transactionId, purchaseId, amount, feeAmount, licensePlateNumber, licenseState, vehicleAxle, vehicleMake, vehicleModel, tripCount, travelDate, storeId, storeZip, transactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.MerchantBalance GetMerchantBalance(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            return base.Channel.GetMerchantBalance(MID, TID, Password, Cashier, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.MerchantBalance> GetMerchantBalanceAsync(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            return base.Channel.GetMerchantBalanceAsync(MID, TID, Password, Cashier, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.CreditResponse MetelePinlessVoidLastLoad(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string TransactionMode) {
            return base.Channel.MetelePinlessVoidLastLoad(MID, TID, Password, Cashier, PhoneNumber, TopUpAmount, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.CreditResponse> MetelePinlessVoidLastLoadAsync(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string TransactionMode) {
            return base.Channel.MetelePinlessVoidLastLoadAsync(MID, TID, Password, Cashier, PhoneNumber, TopUpAmount, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.CreditResponse OKPinlessVoidLastLoad(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string OrderId, string TransactionMode) {
            return base.Channel.OKPinlessVoidLastLoad(MID, TID, Password, Cashier, PhoneNumber, TopUpAmount, OrderId, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.CreditResponse> OKPinlessVoidLastLoadAsync(string MID, string TID, string Password, string Cashier, string PhoneNumber, double TopUpAmount, string OrderId, string TransactionMode) {
            return base.Channel.OKPinlessVoidLastLoadAsync(MID, TID, Password, Cashier, PhoneNumber, TopUpAmount, OrderId, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Response OKPinlessAddPhoneNumber(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessAddPhoneNumber(MID, TID, Password, Cashier, ExistingPhoneNumber, NewPhoneNumber, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessAddPhoneNumberAsync(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessAddPhoneNumberAsync(MID, TID, Password, Cashier, ExistingPhoneNumber, NewPhoneNumber, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Response OKPinlessBalance(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode) {
            return base.Channel.OKPinlessBalance(MID, TID, Password, Cashier, AccountNumber, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessBalanceAsync(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode) {
            return base.Channel.OKPinlessBalanceAsync(MID, TID, Password, Cashier, AccountNumber, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Response OKPinlessDeletePhoneNumber(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessDeletePhoneNumber(MID, TID, Password, Cashier, ExistingPhoneNumber, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessDeletePhoneNumberAsync(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessDeletePhoneNumberAsync(MID, TID, Password, Cashier, ExistingPhoneNumber, TransactionMode);
        }
        
        public bool OKPinlessEditPhone(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessEditPhone(MID, TID, Password, Cashier, ExistingPhoneNumber, NewPhoneNumber, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<bool> OKPinlessEditPhoneAsync(string MID, string TID, string Password, string Cashier, string ExistingPhoneNumber, string NewPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessEditPhoneAsync(MID, TID, Password, Cashier, ExistingPhoneNumber, NewPhoneNumber, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Response OKPinlessFindAccount(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode) {
            return base.Channel.OKPinlessFindAccount(MID, TID, Password, Cashier, AccountNumber, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Response> OKPinlessFindAccountAsync(string MID, string TID, string Password, string Cashier, string AccountNumber, string TransactionMode) {
            return base.Channel.OKPinlessFindAccountAsync(MID, TID, Password, Cashier, AccountNumber, TransactionMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.OKPinlessGetCallHistory(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest request) {
            return base.Channel.OKPinlessGetCallHistory(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.CallDetail[] OKPinlessGetCallHistory(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, System.DateTime StartDate, System.DateTime EndDate, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest inValue = new OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.AccountPhoneNumber = AccountPhoneNumber;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).OKPinlessGetCallHistory(inValue);
            return retVal.OKPinlessGetCallHistoryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.OKPinlessGetCallHistoryAsync(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest request) {
            return base.Channel.OKPinlessGetCallHistoryAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryResponse> OKPinlessGetCallHistoryAsync(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, System.DateTime StartDate, System.DateTime EndDate, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest inValue = new OrdersGateway.com.blackstoneonline.services.OKPinlessGetCallHistoryRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.AccountPhoneNumber = AccountPhoneNumber;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).OKPinlessGetCallHistoryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.OKPinlessGetCreditReasons(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest request) {
            return base.Channel.OKPinlessGetCreditReasons(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.DebitReason[] OKPinlessGetCreditReasons(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest inValue = new OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).OKPinlessGetCreditReasons(inValue);
            return retVal.OKPinlessGetCreditReasonsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.OKPinlessGetCreditReasonsAsync(OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest request) {
            return base.Channel.OKPinlessGetCreditReasonsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsResponse> OKPinlessGetCreditReasonsAsync(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest inValue = new OrdersGateway.com.blackstoneonline.services.OKPinlessGetCreditReasonsRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).OKPinlessGetCreditReasonsAsync(inValue);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Report OKPinlessGetPhoneReport(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessGetPhoneReport(MID, TID, Password, Cashier, AccountPhoneNumber, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Report> OKPinlessGetPhoneReportAsync(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, string TransactionMode) {
            return base.Channel.OKPinlessGetPhoneReportAsync(MID, TID, Password, Cashier, AccountPhoneNumber, TransactionMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed1 OrdersGateway.com.blackstoneonline.services.BrokerSoap.OKPinlessGetPhoneReportDetailed(OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed request) {
            return base.Channel.OKPinlessGetPhoneReportDetailed(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.ReportDetail[] OKPinlessGetPhoneReportDetailed(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed inValue = new OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.AccountPhoneNumber = AccountPhoneNumber;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed1 retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).OKPinlessGetPhoneReportDetailed(inValue);
            return retVal.OKPinlessGetPhoneReportDatailedResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed1> OrdersGateway.com.blackstoneonline.services.BrokerSoap.OKPinlessGetPhoneReportDetailedAsync(OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed request) {
            return base.Channel.OKPinlessGetPhoneReportDetailedAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed1> OKPinlessGetPhoneReportDetailedAsync(string MID, string TID, string Password, string Cashier, string AccountPhoneNumber, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed inValue = new OrdersGateway.com.blackstoneonline.services.OKPinlessGetPhoneReportDatailed();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.AccountPhoneNumber = AccountPhoneNumber;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).OKPinlessGetPhoneReportDetailedAsync(inValue);
        }
        
        public OrdersGateway.com.blackstoneonline.services.PinCreditResponse DoPinCredit(string MID, string TID, string Password, string Cashier, int OriginalOrderID, string ProductMaincode, decimal ProductDenomination, string ControlNumber, string PinNumber, string TransactionMode) {
            return base.Channel.DoPinCredit(MID, TID, Password, Cashier, OriginalOrderID, ProductMaincode, ProductDenomination, ControlNumber, PinNumber, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.PinCreditResponse> DoPinCreditAsync(string MID, string TID, string Password, string Cashier, int OriginalOrderID, string ProductMaincode, decimal ProductDenomination, string ControlNumber, string PinNumber, string TransactionMode) {
            return base.Channel.DoPinCreditAsync(MID, TID, Password, Cashier, OriginalOrderID, ProductMaincode, ProductDenomination, ControlNumber, PinNumber, TransactionMode);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Catalog GetProductsCatalog(string MID, string TID, string Password, string Cashier, int ProfileID, string TransactionMode) {
            return base.Channel.GetProductsCatalog(MID, TID, Password, Cashier, ProfileID, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Catalog> GetProductsCatalogAsync(string MID, string TID, string Password, string Cashier, int ProfileID, string TransactionMode) {
            return base.Channel.GetProductsCatalogAsync(MID, TID, Password, Cashier, ProfileID, TransactionMode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.GetProductProfilesResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetProductProfiles(OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest request) {
            return base.Channel.GetProductProfiles(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Catalog[] GetProductProfiles(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.GetProductProfilesResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetProductProfiles(inValue);
            return retVal.GetProductProfilesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetProductProfilesResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetProductProfilesAsync(OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest request) {
            return base.Channel.GetProductProfilesAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetProductProfilesResponse> GetProductProfilesAsync(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetProductProfilesRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetProductProfilesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        OrdersGateway.com.blackstoneonline.services.GetAllDestinationsResponse OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetAllDestinations(OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest request) {
            return base.Channel.GetAllDestinations(request);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Destination[] GetAllDestinations(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.TransactionMode = TransactionMode;
            OrdersGateway.com.blackstoneonline.services.GetAllDestinationsResponse retVal = ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetAllDestinations(inValue);
            return retVal.GetAllDestinationsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetAllDestinationsResponse> OrdersGateway.com.blackstoneonline.services.BrokerSoap.GetAllDestinationsAsync(OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest request) {
            return base.Channel.GetAllDestinationsAsync(request);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.GetAllDestinationsResponse> GetAllDestinationsAsync(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest inValue = new OrdersGateway.com.blackstoneonline.services.GetAllDestinationsRequest();
            inValue.MID = MID;
            inValue.TID = TID;
            inValue.Password = Password;
            inValue.Cashier = Cashier;
            inValue.TransactionMode = TransactionMode;
            return ((OrdersGateway.com.blackstoneonline.services.BrokerSoap)(this)).GetAllDestinationsAsync(inValue);
        }
        
        public OrdersGateway.com.blackstoneonline.services.Legal GetLegalInformation(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            return base.Channel.GetLegalInformation(MID, TID, Password, Cashier, TransactionMode);
        }
        
        public System.Threading.Tasks.Task<OrdersGateway.com.blackstoneonline.services.Legal> GetLegalInformationAsync(string MID, string TID, string Password, string Cashier, string TransactionMode) {
            return base.Channel.GetLegalInformationAsync(MID, TID, Password, Cashier, TransactionMode);
        }
    }
}
